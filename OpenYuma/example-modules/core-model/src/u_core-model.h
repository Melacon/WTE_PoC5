
#ifndef _H_u_core_model
#define _H_u_core_model
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module core-model
    revision 2017-03-20
    namespace urn:onf:params:xml:ns:yang:core-model
    organization ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_core-model.h"

#ifdef __cplusplus
extern "C" {
#endif
/* Feature core-model:protection-exclude-server
 * Comment out to disable */
#define u_core_model_F_protection_exclude_server 1

/* Feature core-model:protection-exclude-fc-port
 * Comment out to disable */
#define u_core_model_F_protection_exclude_fc_port 1

/* Feature core-model:protection-exclude-ltp
 * Comment out to disable */
#define u_core_model_F_protection_exclude_ltp 1



/* leaf-list /network-element/fd/layer-protocol-name */
typedef struct y_core_model_T_network_element_fd_layer_protocol_name_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol_name;
} y_core_model_T_network_element_fd_layer_protocol_name;

/* leaf-list /network-element/fd/lower-level-fd */
typedef struct y_core_model_T_network_element_fd_lower_level_fd_ {
    dlq_hdr_t qhdr;
    xmlChar *lower_level_fd;
} y_core_model_T_network_element_fd_lower_level_fd;

/* leaf-list /network-element/fd/fc */
typedef struct y_core_model_T_network_element_fd_fc_ {
    dlq_hdr_t qhdr;
    xmlChar *fc;
} y_core_model_T_network_element_fd_fc;

/* leaf-list /network-element/fd/ltp */
typedef struct y_core_model_T_network_element_fd_ltp_ {
    dlq_hdr_t qhdr;
    xmlChar *ltp;
} y_core_model_T_network_element_fd_ltp;

/* leaf-list /network-element/fd/lower-level-link */
typedef struct y_core_model_T_network_element_fd_lower_level_link_ {
    dlq_hdr_t qhdr;
    xmlChar *lower_level_link;
} y_core_model_T_network_element_fd_lower_level_link;

/* list /network-element/fd/local-id */
typedef struct y_core_model_T_network_element_fd_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_fd_local_id;

/* list /network-element/fd/name */
typedef struct y_core_model_T_network_element_fd_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_fd_name;

/* list /network-element/fd/label */
typedef struct y_core_model_T_network_element_fd_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_fd_label;

/* list /network-element/fd/extension */
typedef struct y_core_model_T_network_element_fd_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_fd_extension;

/* list /network-element/fd */
typedef struct y_core_model_T_network_element_fd_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t layer_protocol_name;
    dlq_hdr_t lower_level_fd;
    dlq_hdr_t fc;
    dlq_hdr_t ltp;
    dlq_hdr_t lower_level_link;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_network_element_fd;

/* leaf-list /network-element/ltp/server-ltp */
typedef struct y_core_model_T_network_element_ltp_server_ltp_ {
    dlq_hdr_t qhdr;
    xmlChar *server_ltp;
} y_core_model_T_network_element_ltp_server_ltp;

/* leaf-list /network-element/ltp/client-ltp */
typedef struct y_core_model_T_network_element_ltp_client_ltp_ {
    dlq_hdr_t qhdr;
    xmlChar *client_ltp;
} y_core_model_T_network_element_ltp_client_ltp;

/* leaf-list /network-element/ltp/lp/config-and-switch-controller/fc-switch */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_fc_switch_ {
    dlq_hdr_t qhdr;
    xmlChar *fc_switch;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_fc_switch;

/* container /network-element/ltp/lp/config-and-switch-controller/control-parameters */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_control_parameters_ {
    xmlChar *reversion_mode;
    int64 wait_to_revert_time;
    xmlChar *prot_type;
    int64 hold_off_time;
    xmlChar *network_scheme_specification;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_control_parameters;

/* leaf-list /network-element/ltp/lp/config-and-switch-controller/profile-proxy */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_profile_proxy_ {
    dlq_hdr_t qhdr;
    xmlChar *profile_proxy;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_profile_proxy;

/* list /network-element/ltp/lp/config-and-switch-controller/local-pac/local-id */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id;

/* list /network-element/ltp/lp/config-and-switch-controller/local-pac/name */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_name;

/* list /network-element/ltp/lp/config-and-switch-controller/local-pac/label */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_label;

/* list /network-element/ltp/lp/config-and-switch-controller/local-pac/extension */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_extension;

/* container /network-element/ltp/lp/config-and-switch-controller/local-pac */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac_ {
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac;

/* list /network-element/ltp/lp/config-and-switch-controller/global-pac/local-id */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id;

/* list /network-element/ltp/lp/config-and-switch-controller/global-pac/name */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_name;

/* list /network-element/ltp/lp/config-and-switch-controller/global-pac/label */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_label;

/* list /network-element/ltp/lp/config-and-switch-controller/global-pac/extension */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_extension;

/* container /network-element/ltp/lp/config-and-switch-controller/global-pac */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac_ {
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac;

/* leaf-list /network-element/ltp/lp/config-and-switch-controller/subordinate-controller */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_subordinate_controller_ {
    dlq_hdr_t qhdr;
    xmlChar *subordinate_controller;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller_subordinate_controller;

/* list /network-element/ltp/lp/config-and-switch-controller */
typedef struct y_core_model_T_network_element_ltp_lp_config_and_switch_controller_ {
    dlq_hdr_t qhdr;
    xmlChar *switch_rule;
    dlq_hdr_t fc_switch;
    y_core_model_T_network_element_ltp_lp_config_and_switch_controller_control_parameters control_parameters;
    dlq_hdr_t profile_proxy;
    y_core_model_T_network_element_ltp_lp_config_and_switch_controller_local_pac local_pac;
    y_core_model_T_network_element_ltp_lp_config_and_switch_controller_global_pac global_pac;
    boolean is_frozen;
    boolean is_coordinated_switching_both_ends;
    dlq_hdr_t subordinate_controller;
} y_core_model_T_network_element_ltp_lp_config_and_switch_controller;

/* list /network-element/ltp/lp/local-id */
typedef struct y_core_model_T_network_element_ltp_lp_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_local_id;

/* list /network-element/ltp/lp/name */
typedef struct y_core_model_T_network_element_ltp_lp_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_name;

/* list /network-element/ltp/lp/label */
typedef struct y_core_model_T_network_element_ltp_lp_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_label;

/* list /network-element/ltp/lp/extension */
typedef struct y_core_model_T_network_element_ltp_lp_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_lp_extension;

/* list /network-element/ltp/lp */
typedef struct y_core_model_T_network_element_ltp_lp_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol_name;
    xmlChar *configured_client_capacity;
    xmlChar *lp_direction;
    xmlChar *termination_state;
    dlq_hdr_t config_and_switch_controller;

#ifdef u_core_model_F_protection_exclude_ltp
    boolean is_protection_lock_out;
#endif /* u_core_model_F_protection_exclude_ltp */
    xmlChar *fc_blocks_signal_to_lp;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_network_element_ltp_lp;

/* leaf-list /network-element/ltp/physical-port-reference */
typedef struct y_core_model_T_network_element_ltp_physical_port_reference_ {
    dlq_hdr_t qhdr;
    xmlChar *physical_port_reference;
} y_core_model_T_network_element_ltp_physical_port_reference;

/* leaf-list /network-element/ltp/ltp-in-other-view */
typedef struct y_core_model_T_network_element_ltp_ltp_in_other_view_ {
    dlq_hdr_t qhdr;
    xmlChar *ltp_in_other_view;
} y_core_model_T_network_element_ltp_ltp_in_other_view;

/* list /network-element/ltp/local-id */
typedef struct y_core_model_T_network_element_ltp_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_local_id;

/* list /network-element/ltp/name */
typedef struct y_core_model_T_network_element_ltp_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_name;

/* list /network-element/ltp/label */
typedef struct y_core_model_T_network_element_ltp_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_label;

/* list /network-element/ltp/extension */
typedef struct y_core_model_T_network_element_ltp_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_ltp_extension;

/* list /network-element/ltp */
typedef struct y_core_model_T_network_element_ltp_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t server_ltp;
    dlq_hdr_t client_ltp;
    dlq_hdr_t lp;
    xmlChar *connected_ltp;
    xmlChar *peer_ltp;
    dlq_hdr_t physical_port_reference;
    dlq_hdr_t ltp_in_other_view;
    xmlChar *ltp_direction;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_network_element_ltp;

/* list /network-element/local-id */
typedef struct y_core_model_T_network_element_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_local_id;

/* list /network-element/name */
typedef struct y_core_model_T_network_element_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_name;

/* list /network-element/label */
typedef struct y_core_model_T_network_element_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_label;

/* list /network-element/extension */
typedef struct y_core_model_T_network_element_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_network_element_extension;

/* container /network-element */
typedef struct y_core_model_T_network_element_ {
    dlq_hdr_t fd;
    dlq_hdr_t ltp;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_network_element;

/* leaf-list /forwarding-construct/lower-level-fc */
typedef struct y_core_model_T_forwarding_construct_lower_level_fc_ {
    dlq_hdr_t qhdr;
    xmlChar *lower_level_fc;
} y_core_model_T_forwarding_construct_lower_level_fc;

/* leaf-list /forwarding-construct/fc-route */
typedef struct y_core_model_T_forwarding_construct_fc_route_ {
    dlq_hdr_t qhdr;
    xmlChar *fc_route;
} y_core_model_T_forwarding_construct_fc_route;

/* leaf-list /forwarding-construct/fc-port/ltp */
typedef struct y_core_model_T_forwarding_construct_fc_port_ltp_ {
    dlq_hdr_t qhdr;
    xmlChar *ltp;
} y_core_model_T_forwarding_construct_fc_port_ltp;

/* leaf-list /forwarding-construct/fc-port/fc-route-feeds-fc-port-egress */
typedef struct y_core_model_T_forwarding_construct_fc_port_fc_route_feeds_fc_port_egress_ {
    dlq_hdr_t qhdr;
    xmlChar *fc_route_feeds_fc_port_egress;
} y_core_model_T_forwarding_construct_fc_port_fc_route_feeds_fc_port_egress;

/* list /forwarding-construct/fc-port/local-id */
typedef struct y_core_model_T_forwarding_construct_fc_port_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_port_local_id;

/* list /forwarding-construct/fc-port/name */
typedef struct y_core_model_T_forwarding_construct_fc_port_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_port_name;

/* list /forwarding-construct/fc-port/label */
typedef struct y_core_model_T_forwarding_construct_fc_port_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_port_label;

/* list /forwarding-construct/fc-port/extension */
typedef struct y_core_model_T_forwarding_construct_fc_port_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_port_extension;

/* list /forwarding-construct/fc-port */
typedef struct y_core_model_T_forwarding_construct_fc_port_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t ltp;
    xmlChar *role;
    xmlChar *fc_port_direction;

#ifdef u_core_model_F_protection_exclude_fc_port
    boolean is_protection_lock_out;
#endif /* u_core_model_F_protection_exclude_fc_port */
    int64 selection_priority;
    boolean is_internal_port;
    dlq_hdr_t fc_route_feeds_fc_port_egress;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_forwarding_construct_fc_port;

/* leaf-list /forwarding-construct/fc-switch/selected-fc-port */
typedef struct y_core_model_T_forwarding_construct_fc_switch_selected_fc_port_ {
    dlq_hdr_t qhdr;
    xmlChar *selected_fc_port;
} y_core_model_T_forwarding_construct_fc_switch_selected_fc_port;

/* leaf-list /forwarding-construct/fc-switch/profile-proxy */
typedef struct y_core_model_T_forwarding_construct_fc_switch_profile_proxy_ {
    dlq_hdr_t qhdr;
    xmlChar *profile_proxy;
} y_core_model_T_forwarding_construct_fc_switch_profile_proxy;

/* leaf-list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/fc-switch */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_fc_switch_ {
    dlq_hdr_t qhdr;
    xmlChar *fc_switch;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_fc_switch;

/* container /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_ {
    xmlChar *reversion_mode;
    int64 wait_to_revert_time;
    xmlChar *prot_type;
    int64 hold_off_time;
    xmlChar *network_scheme_specification;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters;

/* leaf-list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/profile-proxy */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_profile_proxy_ {
    dlq_hdr_t qhdr;
    xmlChar *profile_proxy;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_profile_proxy;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/local-id */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/name */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/label */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/extension */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension;

/* container /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_ {
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/local-id */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/name */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/label */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label;

/* list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/extension */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension;

/* container /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_ {
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac;

/* leaf-list /forwarding-construct/fc-switch/internal-configuration-and-switch-control/subordinate-controller */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_subordinate_controller_ {
    dlq_hdr_t qhdr;
    xmlChar *subordinate_controller;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_subordinate_controller;

/* container /forwarding-construct/fc-switch/internal-configuration-and-switch-control */
typedef struct y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_ {
    xmlChar *switch_rule;
    dlq_hdr_t fc_switch;
    y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters control_parameters;
    dlq_hdr_t profile_proxy;
    y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac local_pac;
    y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac global_pac;
    boolean is_frozen;
    boolean is_coordinated_switching_both_ends;
    dlq_hdr_t subordinate_controller;
} y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control;

/* container /forwarding-construct/fc-switch/control-parameters */
typedef struct y_core_model_T_forwarding_construct_fc_switch_control_parameters_ {
    xmlChar *reversion_mode;
    int64 wait_to_revert_time;
    xmlChar *prot_type;
    int64 hold_off_time;
    xmlChar *network_scheme_specification;
} y_core_model_T_forwarding_construct_fc_switch_control_parameters;

/* list /forwarding-construct/fc-switch/local-id */
typedef struct y_core_model_T_forwarding_construct_fc_switch_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_local_id;

/* list /forwarding-construct/fc-switch/name */
typedef struct y_core_model_T_forwarding_construct_fc_switch_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_name;

/* list /forwarding-construct/fc-switch/label */
typedef struct y_core_model_T_forwarding_construct_fc_switch_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_label;

/* list /forwarding-construct/fc-switch/extension */
typedef struct y_core_model_T_forwarding_construct_fc_switch_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_fc_switch_extension;

/* list /forwarding-construct/fc-switch */
typedef struct y_core_model_T_forwarding_construct_fc_switch_ {
    dlq_hdr_t qhdr;
    int64 hold_off_time;
    xmlChar *prot_type;
    xmlChar *reversion_mode;
    dlq_hdr_t selected_fc_port;
    dlq_hdr_t profile_proxy;
    y_core_model_T_forwarding_construct_fc_switch_internal_configuration_and_switch_control internal_configuration_and_switch_control;
    xmlChar *switch_control;
    xmlChar *switch_selects_ports;
    xmlChar *switch_selection_reason;
    y_core_model_T_forwarding_construct_fc_switch_control_parameters control_parameters;
    int64 wait_to_restore_time;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_forwarding_construct_fc_switch;

/* leaf-list /forwarding-construct/supported-link */
typedef struct y_core_model_T_forwarding_construct_supported_link_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_link;
} y_core_model_T_forwarding_construct_supported_link;

/* list /forwarding-construct/local-id */
typedef struct y_core_model_T_forwarding_construct_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_local_id;

/* list /forwarding-construct/name */
typedef struct y_core_model_T_forwarding_construct_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_name;

/* list /forwarding-construct/label */
typedef struct y_core_model_T_forwarding_construct_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_label;

/* list /forwarding-construct/extension */
typedef struct y_core_model_T_forwarding_construct_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_forwarding_construct_extension;

/* list /forwarding-construct */
typedef struct y_core_model_T_forwarding_construct_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol_name;
    dlq_hdr_t lower_level_fc;
    dlq_hdr_t fc_route;
    dlq_hdr_t fc_port;
    dlq_hdr_t fc_switch;
    xmlChar *forwarding_direction;

#ifdef u_core_model_F_protection_exclude_server
    boolean is_protection_lock_out;
#endif /* u_core_model_F_protection_exclude_server */
    int64 service_priority;
    dlq_hdr_t supported_link;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_forwarding_construct;

/* leaf-list /operation-envelope/operation-set/after-operation-set */
typedef struct y_core_model_T_operation_envelope_operation_set_after_operation_set_ {
    dlq_hdr_t qhdr;
    xmlChar *after_operation_set;
} y_core_model_T_operation_envelope_operation_set_after_operation_set;

/* leaf-list /operation-envelope/operation-set/before-operation-set */
typedef struct y_core_model_T_operation_envelope_operation_set_before_operation_set_ {
    dlq_hdr_t qhdr;
    xmlChar *before_operation_set;
} y_core_model_T_operation_envelope_operation_set_before_operation_set;

/* leaf-list /operation-envelope/operation-set/operationset */
typedef struct y_core_model_T_operation_envelope_operation_set_operationset_ {
    dlq_hdr_t qhdr;
    xmlChar *operationset;
} y_core_model_T_operation_envelope_operation_set_operationset;

/* list /operation-envelope/operation-set/operation-details/necessary-initialcondition-constraints */
typedef struct y_core_model_T_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_ {
    dlq_hdr_t qhdr;
    boolean is_not;
} y_core_model_T_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints;

/* list /operation-envelope/operation-set/operation-details */
typedef struct y_core_model_T_operation_envelope_operation_set_operation_details_ {
    dlq_hdr_t qhdr;
    xmlChar *action_verb;
    dlq_hdr_t necessary_initialcondition_constraints;
} y_core_model_T_operation_envelope_operation_set_operation_details;

/* list /operation-envelope/operation-set */
typedef struct y_core_model_T_operation_envelope_operation_set_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t after_operation_set;
    dlq_hdr_t before_operation_set;
    xmlChar *effort_and_action;
    xmlChar *pause_resume_rule;
    dlq_hdr_t operationset;
    boolean is_short_lived;
    dlq_hdr_t operation_details;
} y_core_model_T_operation_envelope_operation_set;

/* container /operation-envelope/generaldirectives */
typedef struct y_core_model_T_operation_envelope_generaldirectives_ {
} y_core_model_T_operation_envelope_generaldirectives;

/* container /operation-envelope/operationidentifiers */
typedef struct y_core_model_T_operation_envelope_operationidentifiers_ {
} y_core_model_T_operation_envelope_operationidentifiers;

/* container /operation-envelope */
typedef struct y_core_model_T_operation_envelope_ {
    dlq_hdr_t operation_set;
    y_core_model_T_operation_envelope_generaldirectives generaldirectives;
    y_core_model_T_operation_envelope_operationidentifiers operationidentifiers;
} y_core_model_T_operation_envelope;

/* list /equipment/connector/pin */
typedef struct y_core_model_T_equipment_connector_pin_ {
    dlq_hdr_t qhdr;
    xmlChar *position;
    xmlChar *orientation;
} y_core_model_T_equipment_connector_pin;

/* container /equipment/connector/manufactured-thing/manufacturer-properties */
typedef struct y_core_model_T_equipment_connector_manufactured_thing_manufacturer_properties_ {
    xmlChar *manufacturer_identifier;
    xmlChar *manufacturer_name;
} y_core_model_T_equipment_connector_manufactured_thing_manufacturer_properties;

/* container /equipment/connector/manufactured-thing/equipment-type */
typedef struct y_core_model_T_equipment_connector_manufactured_thing_equipment_type_ {
    xmlChar *description;
    xmlChar *model_identifier;
    xmlChar *part_type_identifier;
    xmlChar *type_name;
    xmlChar *version;
} y_core_model_T_equipment_connector_manufactured_thing_equipment_type;

/* container /equipment/connector/manufactured-thing/equipment-instance */
typedef struct y_core_model_T_equipment_connector_manufactured_thing_equipment_instance_ {
    xmlChar *manufacture_date;
    xmlChar *serial_number;
    xmlChar *asset_instance_identifier;
} y_core_model_T_equipment_connector_manufactured_thing_equipment_instance;

/* container /equipment/connector/manufactured-thing/operator-augmented-equipment-type */
typedef struct y_core_model_T_equipment_connector_manufactured_thing_operator_augmented_equipment_type_ {
    xmlChar *asset_type_identifier;
} y_core_model_T_equipment_connector_manufactured_thing_operator_augmented_equipment_type;

/* container /equipment/connector/manufactured-thing */
typedef struct y_core_model_T_equipment_connector_manufactured_thing_ {
    y_core_model_T_equipment_connector_manufactured_thing_manufacturer_properties manufacturer_properties;
    y_core_model_T_equipment_connector_manufactured_thing_equipment_type equipment_type;
    y_core_model_T_equipment_connector_manufactured_thing_equipment_instance equipment_instance;
    y_core_model_T_equipment_connector_manufactured_thing_operator_augmented_equipment_type operator_augmented_equipment_type;
} y_core_model_T_equipment_connector_manufactured_thing;

/* container /equipment/connector/position */
typedef struct y_core_model_T_equipment_connector_position_ {
    xmlChar *relative_position;
} y_core_model_T_equipment_connector_position;

/* container /equipment/connector/mechanical-features */
typedef struct y_core_model_T_equipment_connector_mechanical_features_ {
} y_core_model_T_equipment_connector_mechanical_features;

/* list /equipment/connector/pin-layout/position */
typedef struct y_core_model_T_equipment_connector_pin_layout_position_ {
    dlq_hdr_t qhdr;
    xmlChar *relative_position;
} y_core_model_T_equipment_connector_pin_layout_position;

/* container /equipment/connector/pin-layout */
typedef struct y_core_model_T_equipment_connector_pin_layout_ {
    dlq_hdr_t position;
} y_core_model_T_equipment_connector_pin_layout;

/* list /equipment/connector/local-id */
typedef struct y_core_model_T_equipment_connector_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_connector_local_id;

/* list /equipment/connector/name */
typedef struct y_core_model_T_equipment_connector_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_connector_name;

/* list /equipment/connector/label */
typedef struct y_core_model_T_equipment_connector_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_connector_label;

/* list /equipment/connector/extension */
typedef struct y_core_model_T_equipment_connector_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_connector_extension;

/* list /equipment/connector */
typedef struct y_core_model_T_equipment_connector_ {
    dlq_hdr_t qhdr;
    xmlChar *connector;
    dlq_hdr_t pin;
    xmlChar *orientation;
    y_core_model_T_equipment_connector_manufactured_thing manufactured_thing;
    y_core_model_T_equipment_connector_position position;
    y_core_model_T_equipment_connector_mechanical_features mechanical_features;
    y_core_model_T_equipment_connector_pin_layout pin_layout;
    xmlChar *connector_type;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_equipment_connector;

/* leaf-list /equipment/contained-holder/connector */
typedef struct y_core_model_T_equipment_contained_holder_connector_ {
    dlq_hdr_t qhdr;
    xmlChar *connector;
} y_core_model_T_equipment_contained_holder_connector;

/* container /equipment/contained-holder/spatial-properties-of-type */
typedef struct y_core_model_T_equipment_contained_holder_spatial_properties_of_type_ {
    xmlChar *height;
    xmlChar *width;
    xmlChar *length;
} y_core_model_T_equipment_contained_holder_spatial_properties_of_type;

/* container /equipment/contained-holder/holder-monitors */
typedef struct y_core_model_T_equipment_contained_holder_holder_monitors_ {
    boolean is_active;
    boolean is_actual_mismatch_with_expected;
    xmlChar *aggregate_function;
} y_core_model_T_equipment_contained_holder_holder_monitors;

/* container /equipment/contained-holder/holder-location/address-element/local-id/local-id */
typedef struct y_core_model_T_equipment_contained_holder_holder_location_address_element_local_id_local_id_ {
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_contained_holder_holder_location_address_element_local_id_local_id;

/* container /equipment/contained-holder/holder-location/address-element/local-id */
typedef struct y_core_model_T_equipment_contained_holder_holder_location_address_element_local_id_ {
    xmlChar *class_of_instance;
    y_core_model_T_equipment_contained_holder_holder_location_address_element_local_id_local_id local_id;
} y_core_model_T_equipment_contained_holder_holder_location_address_element_local_id;

/* container /equipment/contained-holder/holder-location/address-element/name/name */
typedef struct y_core_model_T_equipment_contained_holder_holder_location_address_element_name_name_ {
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_contained_holder_holder_location_address_element_name_name;

/* container /equipment/contained-holder/holder-location/address-element/name */
typedef struct y_core_model_T_equipment_contained_holder_holder_location_address_element_name_ {
    xmlChar *class_of_instance;
    y_core_model_T_equipment_contained_holder_holder_location_address_element_name_name name;
} y_core_model_T_equipment_contained_holder_holder_location_address_element_name;

/* list /equipment/contained-holder/holder-location/address-element */
typedef struct y_core_model_T_equipment_contained_holder_holder_location_address_element_ {
    dlq_hdr_t qhdr;
    xmlChar *address_element_name;
    y_core_model_T_equipment_contained_holder_holder_location_address_element_local_id local_id;
    xmlChar *uuid;
    y_core_model_T_equipment_contained_holder_holder_location_address_element_name name;
    xmlChar *arbitrary_element;
} y_core_model_T_equipment_contained_holder_holder_location_address_element;

/* container /equipment/contained-holder/holder-location */
typedef struct y_core_model_T_equipment_contained_holder_holder_location_ {
    xmlChar *address_name;
    dlq_hdr_t address_element;
} y_core_model_T_equipment_contained_holder_holder_location;

/* container /equipment/contained-holder/position */
typedef struct y_core_model_T_equipment_contained_holder_position_ {
    xmlChar *relative_position;
} y_core_model_T_equipment_contained_holder_position;

/* container /equipment/contained-holder/holder-structure */
typedef struct y_core_model_T_equipment_contained_holder_holder_structure_ {
    xmlChar *holder_category;
    boolean is_captive;
    boolean is_guided;
    boolean is_quantized_space;
} y_core_model_T_equipment_contained_holder_holder_structure;

/* container /equipment/contained-holder/physical-rating */
typedef struct y_core_model_T_equipment_contained_holder_physical_rating_ {
    xmlChar *thermal_rating;
    xmlChar *power_rating;
} y_core_model_T_equipment_contained_holder_physical_rating;

/* leaf-list /equipment/contained-holder/supported-equipment */
typedef struct y_core_model_T_equipment_contained_holder_supported_equipment_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_equipment;
} y_core_model_T_equipment_contained_holder_supported_equipment;

/* container /equipment/contained-holder/expected-holder */
typedef struct y_core_model_T_equipment_contained_holder_expected_holder_ {
} y_core_model_T_equipment_contained_holder_expected_holder;

/* container /equipment/contained-holder/actual-holder */
typedef struct y_core_model_T_equipment_contained_holder_actual_holder_ {
} y_core_model_T_equipment_contained_holder_actual_holder;

/* list /equipment/contained-holder/local-id */
typedef struct y_core_model_T_equipment_contained_holder_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_contained_holder_local_id;

/* list /equipment/contained-holder/name */
typedef struct y_core_model_T_equipment_contained_holder_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_contained_holder_name;

/* list /equipment/contained-holder/label */
typedef struct y_core_model_T_equipment_contained_holder_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_contained_holder_label;

/* list /equipment/contained-holder/extension */
typedef struct y_core_model_T_equipment_contained_holder_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_contained_holder_extension;

/* list /equipment/contained-holder */
typedef struct y_core_model_T_equipment_contained_holder_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t connector;
    xmlChar *occupying_fru;
    y_core_model_T_equipment_contained_holder_spatial_properties_of_type spatial_properties_of_type;
    y_core_model_T_equipment_contained_holder_holder_monitors holder_monitors;
    y_core_model_T_equipment_contained_holder_holder_location holder_location;
    y_core_model_T_equipment_contained_holder_position position;
    y_core_model_T_equipment_contained_holder_holder_structure holder_structure;
    y_core_model_T_equipment_contained_holder_physical_rating physical_rating;
    dlq_hdr_t supported_equipment;
    y_core_model_T_equipment_contained_holder_expected_holder expected_holder;
    y_core_model_T_equipment_contained_holder_actual_holder actual_holder;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_equipment_contained_holder;

/* list /equipment/exposed-cable/connector/pin */
typedef struct y_core_model_T_equipment_exposed_cable_connector_pin_ {
    dlq_hdr_t qhdr;
    xmlChar *position;
    xmlChar *orientation;
} y_core_model_T_equipment_exposed_cable_connector_pin;

/* container /equipment/exposed-cable/connector/manufactured-thing/manufacturer-properties */
typedef struct y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_ {
    xmlChar *manufacturer_identifier;
    xmlChar *manufacturer_name;
} y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties;

/* container /equipment/exposed-cable/connector/manufactured-thing/equipment-type */
typedef struct y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_equipment_type_ {
    xmlChar *description;
    xmlChar *model_identifier;
    xmlChar *part_type_identifier;
    xmlChar *type_name;
    xmlChar *version;
} y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_equipment_type;

/* container /equipment/exposed-cable/connector/manufactured-thing/equipment-instance */
typedef struct y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_ {
    xmlChar *manufacture_date;
    xmlChar *serial_number;
    xmlChar *asset_instance_identifier;
} y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_equipment_instance;

/* container /equipment/exposed-cable/connector/manufactured-thing/operator-augmented-equipment-type */
typedef struct y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type_ {
    xmlChar *asset_type_identifier;
} y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type;

/* container /equipment/exposed-cable/connector/manufactured-thing */
typedef struct y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_ {
    y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties manufacturer_properties;
    y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_equipment_type equipment_type;
    y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_equipment_instance equipment_instance;
    y_core_model_T_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type operator_augmented_equipment_type;
} y_core_model_T_equipment_exposed_cable_connector_manufactured_thing;

/* container /equipment/exposed-cable/connector/position */
typedef struct y_core_model_T_equipment_exposed_cable_connector_position_ {
    xmlChar *relative_position;
} y_core_model_T_equipment_exposed_cable_connector_position;

/* container /equipment/exposed-cable/connector/mechanical-features */
typedef struct y_core_model_T_equipment_exposed_cable_connector_mechanical_features_ {
} y_core_model_T_equipment_exposed_cable_connector_mechanical_features;

/* list /equipment/exposed-cable/connector/pin-layout/position */
typedef struct y_core_model_T_equipment_exposed_cable_connector_pin_layout_position_ {
    dlq_hdr_t qhdr;
    xmlChar *relative_position;
} y_core_model_T_equipment_exposed_cable_connector_pin_layout_position;

/* container /equipment/exposed-cable/connector/pin-layout */
typedef struct y_core_model_T_equipment_exposed_cable_connector_pin_layout_ {
    dlq_hdr_t position;
} y_core_model_T_equipment_exposed_cable_connector_pin_layout;

/* list /equipment/exposed-cable/connector/local-id */
typedef struct y_core_model_T_equipment_exposed_cable_connector_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_connector_local_id;

/* list /equipment/exposed-cable/connector/name */
typedef struct y_core_model_T_equipment_exposed_cable_connector_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_connector_name;

/* list /equipment/exposed-cable/connector/label */
typedef struct y_core_model_T_equipment_exposed_cable_connector_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_connector_label;

/* list /equipment/exposed-cable/connector/extension */
typedef struct y_core_model_T_equipment_exposed_cable_connector_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_connector_extension;

/* list /equipment/exposed-cable/connector */
typedef struct y_core_model_T_equipment_exposed_cable_connector_ {
    dlq_hdr_t qhdr;
    xmlChar *connector;
    dlq_hdr_t pin;
    xmlChar *orientation;
    y_core_model_T_equipment_exposed_cable_connector_manufactured_thing manufactured_thing;
    y_core_model_T_equipment_exposed_cable_connector_position position;
    y_core_model_T_equipment_exposed_cable_connector_mechanical_features mechanical_features;
    y_core_model_T_equipment_exposed_cable_connector_pin_layout pin_layout;
    xmlChar *connector_type;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_equipment_exposed_cable_connector;

/* container /equipment/exposed-cable/manufactured-thing/manufacturer-properties */
typedef struct y_core_model_T_equipment_exposed_cable_manufactured_thing_manufacturer_properties_ {
    xmlChar *manufacturer_identifier;
    xmlChar *manufacturer_name;
} y_core_model_T_equipment_exposed_cable_manufactured_thing_manufacturer_properties;

/* container /equipment/exposed-cable/manufactured-thing/equipment-type */
typedef struct y_core_model_T_equipment_exposed_cable_manufactured_thing_equipment_type_ {
    xmlChar *description;
    xmlChar *model_identifier;
    xmlChar *part_type_identifier;
    xmlChar *type_name;
    xmlChar *version;
} y_core_model_T_equipment_exposed_cable_manufactured_thing_equipment_type;

/* container /equipment/exposed-cable/manufactured-thing/equipment-instance */
typedef struct y_core_model_T_equipment_exposed_cable_manufactured_thing_equipment_instance_ {
    xmlChar *manufacture_date;
    xmlChar *serial_number;
    xmlChar *asset_instance_identifier;
} y_core_model_T_equipment_exposed_cable_manufactured_thing_equipment_instance;

/* container /equipment/exposed-cable/manufactured-thing/operator-augmented-equipment-type */
typedef struct y_core_model_T_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type_ {
    xmlChar *asset_type_identifier;
} y_core_model_T_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type;

/* container /equipment/exposed-cable/manufactured-thing */
typedef struct y_core_model_T_equipment_exposed_cable_manufactured_thing_ {
    y_core_model_T_equipment_exposed_cable_manufactured_thing_manufacturer_properties manufacturer_properties;
    y_core_model_T_equipment_exposed_cable_manufactured_thing_equipment_type equipment_type;
    y_core_model_T_equipment_exposed_cable_manufactured_thing_equipment_instance equipment_instance;
    y_core_model_T_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type operator_augmented_equipment_type;
} y_core_model_T_equipment_exposed_cable_manufactured_thing;

/* container /equipment/exposed-cable/physical-characteristics */
typedef struct y_core_model_T_equipment_exposed_cable_physical_characteristics_ {
    xmlChar *weight_characteristics;
    xmlChar *fire_characteristics;
    xmlChar *materials;
} y_core_model_T_equipment_exposed_cable_physical_characteristics;

/* container /equipment/exposed-cable/mechanical-features */
typedef struct y_core_model_T_equipment_exposed_cable_mechanical_features_ {
} y_core_model_T_equipment_exposed_cable_mechanical_features;

/* container /equipment/exposed-cable/spatial-properties-of-type */
typedef struct y_core_model_T_equipment_exposed_cable_spatial_properties_of_type_ {
    xmlChar *height;
    xmlChar *width;
    xmlChar *length;
} y_core_model_T_equipment_exposed_cable_spatial_properties_of_type;

/* list /equipment/exposed-cable/local-id */
typedef struct y_core_model_T_equipment_exposed_cable_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_local_id;

/* list /equipment/exposed-cable/name */
typedef struct y_core_model_T_equipment_exposed_cable_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_name;

/* list /equipment/exposed-cable/label */
typedef struct y_core_model_T_equipment_exposed_cable_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_label;

/* list /equipment/exposed-cable/extension */
typedef struct y_core_model_T_equipment_exposed_cable_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_exposed_cable_extension;

/* list /equipment/exposed-cable */
typedef struct y_core_model_T_equipment_exposed_cable_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t connector;
    y_core_model_T_equipment_exposed_cable_manufactured_thing manufactured_thing;
    y_core_model_T_equipment_exposed_cable_physical_characteristics physical_characteristics;
    y_core_model_T_equipment_exposed_cable_mechanical_features mechanical_features;
    y_core_model_T_equipment_exposed_cable_spatial_properties_of_type spatial_properties_of_type;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_equipment_exposed_cable;

/* container /equipment/manufactured-thing/manufacturer-properties */
typedef struct y_core_model_T_equipment_manufactured_thing_manufacturer_properties_ {
    xmlChar *manufacturer_identifier;
    xmlChar *manufacturer_name;
} y_core_model_T_equipment_manufactured_thing_manufacturer_properties;

/* container /equipment/manufactured-thing/equipment-type */
typedef struct y_core_model_T_equipment_manufactured_thing_equipment_type_ {
    xmlChar *description;
    xmlChar *model_identifier;
    xmlChar *part_type_identifier;
    xmlChar *type_name;
    xmlChar *version;
} y_core_model_T_equipment_manufactured_thing_equipment_type;

/* container /equipment/manufactured-thing/equipment-instance */
typedef struct y_core_model_T_equipment_manufactured_thing_equipment_instance_ {
    xmlChar *manufacture_date;
    xmlChar *serial_number;
    xmlChar *asset_instance_identifier;
} y_core_model_T_equipment_manufactured_thing_equipment_instance;

/* container /equipment/manufactured-thing/operator-augmented-equipment-type */
typedef struct y_core_model_T_equipment_manufactured_thing_operator_augmented_equipment_type_ {
    xmlChar *asset_type_identifier;
} y_core_model_T_equipment_manufactured_thing_operator_augmented_equipment_type;

/* container /equipment/manufactured-thing */
typedef struct y_core_model_T_equipment_manufactured_thing_ {
    y_core_model_T_equipment_manufactured_thing_manufacturer_properties manufacturer_properties;
    y_core_model_T_equipment_manufactured_thing_equipment_type equipment_type;
    y_core_model_T_equipment_manufactured_thing_equipment_instance equipment_instance;
    y_core_model_T_equipment_manufactured_thing_operator_augmented_equipment_type operator_augmented_equipment_type;
} y_core_model_T_equipment_manufactured_thing;

/* container /equipment/spatial-properties-of-type */
typedef struct y_core_model_T_equipment_spatial_properties_of_type_ {
    xmlChar *height;
    xmlChar *width;
    xmlChar *length;
} y_core_model_T_equipment_spatial_properties_of_type;

/* container /equipment/mechanical-features */
typedef struct y_core_model_T_equipment_mechanical_features_ {
} y_core_model_T_equipment_mechanical_features;

/* container /equipment/physical-properties */
typedef struct y_core_model_T_equipment_physical_properties_ {
    xmlChar *temperature;
} y_core_model_T_equipment_physical_properties;

/* container /equipment/function-enablers */
typedef struct y_core_model_T_equipment_function_enablers_ {
    xmlChar *power_state;
} y_core_model_T_equipment_function_enablers;

/* container /equipment/mechanical-functions */
typedef struct y_core_model_T_equipment_mechanical_functions_ {
    xmlChar *rotation_speed;
} y_core_model_T_equipment_mechanical_functions;

/* container /equipment/physical-characteristics */
typedef struct y_core_model_T_equipment_physical_characteristics_ {
    xmlChar *weight_characteristics;
    xmlChar *fire_characteristics;
    xmlChar *materials;
} y_core_model_T_equipment_physical_characteristics;

/* container /equipment/swapability */
typedef struct y_core_model_T_equipment_swapability_ {
    boolean is_hot_swappable;
} y_core_model_T_equipment_swapability;

/* container /equipment/category */
typedef struct y_core_model_T_equipment_category_ {
    xmlChar *category;
} y_core_model_T_equipment_category;

/* container /equipment/physical-rating */
typedef struct y_core_model_T_equipment_physical_rating_ {
    xmlChar *thermal_rating;
    xmlChar *power_rating;
} y_core_model_T_equipment_physical_rating;

/* leaf-list /equipment/function-block */
typedef struct y_core_model_T_equipment_function_block_ {
    dlq_hdr_t qhdr;
    xmlChar *function_block;
} y_core_model_T_equipment_function_block;

/* container /equipment/expected-equipment */
typedef struct y_core_model_T_equipment_expected_equipment_ {
} y_core_model_T_equipment_expected_equipment;

/* container /equipment/actual-equipment */
typedef struct y_core_model_T_equipment_actual_equipment_ {
} y_core_model_T_equipment_actual_equipment;

/* container /equipment/location/equipment-location/address-element/local-id/local-id */
typedef struct y_core_model_T_equipment_location_equipment_location_address_element_local_id_local_id_ {
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_location_equipment_location_address_element_local_id_local_id;

/* container /equipment/location/equipment-location/address-element/local-id */
typedef struct y_core_model_T_equipment_location_equipment_location_address_element_local_id_ {
    xmlChar *class_of_instance;
    y_core_model_T_equipment_location_equipment_location_address_element_local_id_local_id local_id;
} y_core_model_T_equipment_location_equipment_location_address_element_local_id;

/* container /equipment/location/equipment-location/address-element/name/name */
typedef struct y_core_model_T_equipment_location_equipment_location_address_element_name_name_ {
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_location_equipment_location_address_element_name_name;

/* container /equipment/location/equipment-location/address-element/name */
typedef struct y_core_model_T_equipment_location_equipment_location_address_element_name_ {
    xmlChar *class_of_instance;
    y_core_model_T_equipment_location_equipment_location_address_element_name_name name;
} y_core_model_T_equipment_location_equipment_location_address_element_name;

/* list /equipment/location/equipment-location/address-element */
typedef struct y_core_model_T_equipment_location_equipment_location_address_element_ {
    dlq_hdr_t qhdr;
    xmlChar *address_element_name;
    y_core_model_T_equipment_location_equipment_location_address_element_local_id local_id;
    xmlChar *uuid;
    y_core_model_T_equipment_location_equipment_location_address_element_name name;
    xmlChar *arbitrary_element;
} y_core_model_T_equipment_location_equipment_location_address_element;

/* container /equipment/location/equipment-location */
typedef struct y_core_model_T_equipment_location_equipment_location_ {
    xmlChar *address_name;
    dlq_hdr_t address_element;
} y_core_model_T_equipment_location_equipment_location;

/* container /equipment/location/geographical-location/address-element/local-id/local-id */
typedef struct y_core_model_T_equipment_location_geographical_location_address_element_local_id_local_id_ {
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_location_geographical_location_address_element_local_id_local_id;

/* container /equipment/location/geographical-location/address-element/local-id */
typedef struct y_core_model_T_equipment_location_geographical_location_address_element_local_id_ {
    xmlChar *class_of_instance;
    y_core_model_T_equipment_location_geographical_location_address_element_local_id_local_id local_id;
} y_core_model_T_equipment_location_geographical_location_address_element_local_id;

/* container /equipment/location/geographical-location/address-element/name/name */
typedef struct y_core_model_T_equipment_location_geographical_location_address_element_name_name_ {
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_location_geographical_location_address_element_name_name;

/* container /equipment/location/geographical-location/address-element/name */
typedef struct y_core_model_T_equipment_location_geographical_location_address_element_name_ {
    xmlChar *class_of_instance;
    y_core_model_T_equipment_location_geographical_location_address_element_name_name name;
} y_core_model_T_equipment_location_geographical_location_address_element_name;

/* list /equipment/location/geographical-location/address-element */
typedef struct y_core_model_T_equipment_location_geographical_location_address_element_ {
    dlq_hdr_t qhdr;
    xmlChar *address_element_name;
    y_core_model_T_equipment_location_geographical_location_address_element_local_id local_id;
    xmlChar *uuid;
    y_core_model_T_equipment_location_geographical_location_address_element_name name;
    xmlChar *arbitrary_element;
} y_core_model_T_equipment_location_geographical_location_address_element;

/* container /equipment/location/geographical-location */
typedef struct y_core_model_T_equipment_location_geographical_location_ {
    xmlChar *address_name;
    dlq_hdr_t address_element;
} y_core_model_T_equipment_location_geographical_location;

/* container /equipment/location */
typedef struct y_core_model_T_equipment_location_ {
    y_core_model_T_equipment_location_equipment_location equipment_location;
    y_core_model_T_equipment_location_geographical_location geographical_location;
} y_core_model_T_equipment_location;

/* list /equipment/local-id */
typedef struct y_core_model_T_equipment_local_id_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_local_id;

/* list /equipment/name */
typedef struct y_core_model_T_equipment_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_name;

/* list /equipment/label */
typedef struct y_core_model_T_equipment_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_label;

/* list /equipment/extension */
typedef struct y_core_model_T_equipment_extension_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_core_model_T_equipment_extension;

/* list /equipment */
typedef struct y_core_model_T_equipment_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t connector;
    dlq_hdr_t contained_holder;
    dlq_hdr_t exposed_cable;
    y_core_model_T_equipment_manufactured_thing manufactured_thing;
    y_core_model_T_equipment_spatial_properties_of_type spatial_properties_of_type;
    y_core_model_T_equipment_mechanical_features mechanical_features;
    y_core_model_T_equipment_physical_properties physical_properties;
    y_core_model_T_equipment_function_enablers function_enablers;
    y_core_model_T_equipment_mechanical_functions mechanical_functions;
    y_core_model_T_equipment_physical_characteristics physical_characteristics;
    y_core_model_T_equipment_swapability swapability;
    y_core_model_T_equipment_category category;
    y_core_model_T_equipment_physical_rating physical_rating;
    boolean is_field_replaceable;
    dlq_hdr_t function_block;
    y_core_model_T_equipment_expected_equipment expected_equipment;
    y_core_model_T_equipment_actual_equipment actual_equipment;
    y_core_model_T_equipment_location location;
    dlq_hdr_t local_id;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    dlq_hdr_t extension;
    xmlChar *operational_state;
    xmlChar *administrative_control;
    xmlChar *administrative_state;
    xmlChar *lifecycle_state;
} y_core_model_T_equipment;

/********************************************************************
* FUNCTION u_core_model_network_element_fd_layer_protocol_name_edit
* 
* Edit database object callback
* Path: /network-element/fd/layer-protocol-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_layer_protocol_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_lower_level_fd_edit
* 
* Edit database object callback
* Path: /network-element/fd/lower-level-fd
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_lower_level_fd_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_fc_edit
* 
* Edit database object callback
* Path: /network-element/fd/fc
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_fc_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_ltp_edit
* 
* Edit database object callback
* Path: /network-element/fd/ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_lower_level_link_edit
* 
* Edit database object callback
* Path: /network-element/fd/lower-level-link
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_lower_level_link_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_local_id_value_name_edit
* 
* Edit database object callback
* Path: /network-element/fd/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_local_id_value_edit
* 
* Edit database object callback
* Path: /network-element/fd/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_local_id_edit
* 
* Edit database object callback
* Path: /network-element/fd/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_uuid_edit
* 
* Edit database object callback
* Path: /network-element/fd/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_name_value_name_edit
* 
* Edit database object callback
* Path: /network-element/fd/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_name_value_edit
* 
* Edit database object callback
* Path: /network-element/fd/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_name_edit
* 
* Edit database object callback
* Path: /network-element/fd/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_label_value_name_edit
* 
* Edit database object callback
* Path: /network-element/fd/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_label_value_edit
* 
* Edit database object callback
* Path: /network-element/fd/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_label_edit
* 
* Edit database object callback
* Path: /network-element/fd/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_extension_value_name_edit
* 
* Edit database object callback
* Path: /network-element/fd/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_extension_value_edit
* 
* Edit database object callback
* Path: /network-element/fd/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_extension_edit
* 
* Edit database object callback
* Path: /network-element/fd/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid,
    const xmlChar *k_network_element_fd_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_network_element_fd_operational_state_get
* 
* Get database object callback
* Path: /network-element/fd/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_administrative_control_edit
* 
* Edit database object callback
* Path: /network-element/fd/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);

/********************************************************************
* FUNCTION u_core_model_network_element_fd_administrative_state_get
* 
* Get database object callback
* Path: /network-element/fd/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_lifecycle_state_edit
* 
* Edit database object callback
* Path: /network-element/fd/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_fd_edit
* 
* Edit database object callback
* Path: /network-element/fd
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_fd_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_fd_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_server_ltp_edit
* 
* Edit database object callback
* Path: /network-element/ltp/server-ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_server_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_client_ltp_edit
* 
* Edit database object callback
* Path: /network-element/ltp/client-ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_client_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_layer_protocol_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/layer-protocol-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_layer_protocol_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_configured_client_capacity_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/configured-client-capacity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_configured_client_capacity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_lp_direction_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/lp-direction
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_lp_direction_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_termination_state_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/termination-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_termination_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_switch_rule_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/switch-rule
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_switch_rule_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_fc_switch_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/fc-switch
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_fc_switch_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_reversion_mode_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/control-parameters/reversion-mode
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_reversion_mode_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_wait_to_revert_time_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/control-parameters/wait-to-revert-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_wait_to_revert_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_prot_type_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/control-parameters/prot-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_prot_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_hold_off_time_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/control-parameters/hold-off-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_hold_off_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_network_scheme_specification_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/control-parameters/network-scheme-specification
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_network_scheme_specification_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/control-parameters
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_control_parameters_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_profile_proxy_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/profile-proxy
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_profile_proxy_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_uuid_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_label_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_local_pac_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_operational_state_get
* 
* Get database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_administrative_control_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_administrative_state_get
* 
* Get database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_lifecycle_state_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/local-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_local_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_uuid_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_label_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_global_pac_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_operational_state_get
* 
* Get database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_administrative_control_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_administrative_state_get
* 
* Get database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_lifecycle_state_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/global-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_global_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_is_frozen_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/is-frozen
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_is_frozen_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_is_coordinated_switching_both_ends_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/is-coordinated-switching-both-ends
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_is_coordinated_switching_both_ends_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_subordinate_controller_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller/subordinate-controller
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_subordinate_controller_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_config_and_switch_controller_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/config-and-switch-controller
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_config_and_switch_controller_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_config_and_switch_controller_switch_rule);


#ifdef u_core_model_F_protection_exclude_ltp
/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_is_protection_lock_out_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/is-protection-lock-out
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_is_protection_lock_out_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);

#endif /* u_core_model_F_protection_exclude_ltp */

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_fc_blocks_signal_to_lp_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/fc-blocks-signal-to-lp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_fc_blocks_signal_to_lp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_local_id_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_local_id_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_local_id_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_uuid_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_name_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_name_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_label_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_label_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_label_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_extension_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_extension_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_extension_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid,
    const xmlChar *k_network_element_ltp_lp_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_operational_state_get
* 
* Get database object callback
* Path: /network-element/ltp/lp/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_administrative_control_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_administrative_state_get
* 
* Get database object callback
* Path: /network-element/ltp/lp/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_lifecycle_state_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lp_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_lp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_connected_ltp_edit
* 
* Edit database object callback
* Path: /network-element/ltp/connected-ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_connected_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_peer_ltp_edit
* 
* Edit database object callback
* Path: /network-element/ltp/peer-ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_peer_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_physical_port_reference_edit
* 
* Edit database object callback
* Path: /network-element/ltp/physical-port-reference
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_physical_port_reference_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_ltp_in_other_view_edit
* 
* Edit database object callback
* Path: /network-element/ltp/ltp-in-other-view
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_ltp_in_other_view_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_ltp_direction_edit
* 
* Edit database object callback
* Path: /network-element/ltp/ltp-direction
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_ltp_direction_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_local_id_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_local_id_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_local_id_edit
* 
* Edit database object callback
* Path: /network-element/ltp/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_uuid_edit
* 
* Edit database object callback
* Path: /network-element/ltp/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_name_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_name_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_label_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_label_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_label_edit
* 
* Edit database object callback
* Path: /network-element/ltp/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_extension_value_name_edit
* 
* Edit database object callback
* Path: /network-element/ltp/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_extension_value_edit
* 
* Edit database object callback
* Path: /network-element/ltp/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_extension_edit
* 
* Edit database object callback
* Path: /network-element/ltp/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid,
    const xmlChar *k_network_element_ltp_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_operational_state_get
* 
* Get database object callback
* Path: /network-element/ltp/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_administrative_control_edit
* 
* Edit database object callback
* Path: /network-element/ltp/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);

/********************************************************************
* FUNCTION u_core_model_network_element_ltp_administrative_state_get
* 
* Get database object callback
* Path: /network-element/ltp/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_lifecycle_state_edit
* 
* Edit database object callback
* Path: /network-element/ltp/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_ltp_edit
* 
* Edit database object callback
* Path: /network-element/ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_ltp_uuid);


/********************************************************************
* FUNCTION u_core_model_network_element_local_id_value_name_edit
* 
* Edit database object callback
* Path: /network-element/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_local_id_value_edit
* 
* Edit database object callback
* Path: /network-element/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_local_id_edit
* 
* Edit database object callback
* Path: /network-element/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_uuid_edit
* 
* Edit database object callback
* Path: /network-element/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_core_model_network_element_name_value_name_edit
* 
* Edit database object callback
* Path: /network-element/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_name_value_edit
* 
* Edit database object callback
* Path: /network-element/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_name_edit
* 
* Edit database object callback
* Path: /network-element/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_name_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_label_value_name_edit
* 
* Edit database object callback
* Path: /network-element/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_label_value_edit
* 
* Edit database object callback
* Path: /network-element/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_label_edit
* 
* Edit database object callback
* Path: /network-element/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_label_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_extension_value_name_edit
* 
* Edit database object callback
* Path: /network-element/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_extension_value_edit
* 
* Edit database object callback
* Path: /network-element/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_network_element_extension_edit
* 
* Edit database object callback
* Path: /network-element/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_network_element_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_network_element_operational_state_get
* 
* Get database object callback
* Path: /network-element/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_operational_state_get (
    val_value_t *dstval);


/********************************************************************
* FUNCTION u_core_model_network_element_administrative_control_edit
* 
* Edit database object callback
* Path: /network-element/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);

/********************************************************************
* FUNCTION u_core_model_network_element_administrative_state_get
* 
* Get database object callback
* Path: /network-element/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_administrative_state_get (
    val_value_t *dstval);


/********************************************************************
* FUNCTION u_core_model_network_element_lifecycle_state_edit
* 
* Edit database object callback
* Path: /network-element/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_core_model_network_element_edit
* 
* Edit database object callback
* Path: /network-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_network_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_layer_protocol_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/layer-protocol-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_layer_protocol_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_lower_level_fc_edit
* 
* Edit database object callback
* Path: /forwarding-construct/lower-level-fc
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_lower_level_fc_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_route_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-route
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_route_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_ltp_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/ltp
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_ltp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_role_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/role
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_role_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_fc_port_direction_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/fc-port-direction
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_fc_port_direction_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


#ifdef u_core_model_F_protection_exclude_fc_port
/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_is_protection_lock_out_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/is-protection-lock-out
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_is_protection_lock_out_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);

#endif /* u_core_model_F_protection_exclude_fc_port */

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_selection_priority_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/selection-priority
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_selection_priority_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_is_internal_port_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-port/is-internal-port
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_is_internal_port_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_fc_route_feeds_fc_port_egress_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/fc-route-feeds-fc-port-egress
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_fc_route_feeds_fc_port_egress_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_local_id_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_local_id_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_local_id_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_uuid_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_name_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_name_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_label_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_label_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_label_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_extension_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_extension_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_extension_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid,
    const xmlChar *k_forwarding_construct_fc_port_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_operational_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-port/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_administrative_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_administrative_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-port/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_lifecycle_state_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_port_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-port
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_port_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_port_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_hold_off_time_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/hold-off-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_hold_off_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_prot_type_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/prot-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_prot_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_reversion_mode_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/reversion-mode
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_reversion_mode_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_selected_fc_port_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/selected-fc-port
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_selected_fc_port_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_profile_proxy_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/profile-proxy
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_profile_proxy_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_switch_rule_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/switch-rule
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_switch_rule_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_fc_switch_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/fc-switch
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_fc_switch_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_reversion_mode_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters/reversion-mode
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_reversion_mode_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_wait_to_revert_time_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters/wait-to-revert-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_wait_to_revert_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_prot_type_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters/prot-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_prot_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_hold_off_time_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters/hold-off-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_hold_off_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_network_scheme_specification_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters/network-scheme-specification
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_network_scheme_specification_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/control-parameters
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_control_parameters_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_profile_proxy_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/profile-proxy
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_profile_proxy_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_uuid_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_operational_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_administrative_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_administrative_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_lifecycle_state_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/local-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_local_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_uuid_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_operational_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_administrative_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_administrative_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_lifecycle_state_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/global-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_global_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_is_frozen_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/is-frozen
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_is_frozen_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_is_coordinated_switching_both_ends_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/is-coordinated-switching-both-ends
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_is_coordinated_switching_both_ends_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_subordinate_controller_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control/subordinate-controller
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_subordinate_controller_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/internal-configuration-and-switch-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_internal_configuration_and_switch_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_switch_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/switch-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_switch_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_switch_selects_ports_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/switch-selects-ports
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_switch_selects_ports_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_switch_selection_reason_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/switch-selection-reason
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_switch_selection_reason_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_control_parameters_reversion_mode_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/control-parameters/reversion-mode
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_control_parameters_reversion_mode_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_control_parameters_wait_to_revert_time_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/control-parameters/wait-to-revert-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_control_parameters_wait_to_revert_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_control_parameters_prot_type_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/control-parameters/prot-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_control_parameters_prot_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_control_parameters_hold_off_time_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/control-parameters/hold-off-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_control_parameters_hold_off_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_control_parameters_network_scheme_specification_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/control-parameters/network-scheme-specification
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_control_parameters_network_scheme_specification_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_control_parameters_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/control-parameters
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_control_parameters_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_wait_to_restore_time_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/wait-to-restore-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_wait_to_restore_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_local_id_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_local_id_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_local_id_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_uuid_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_name_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_name_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_label_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_label_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_label_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_extension_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_extension_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_extension_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_operational_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_administrative_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_administrative_state_get
* 
* Get database object callback
* Path: /forwarding-construct/fc-switch/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_lifecycle_state_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_fc_switch_edit
* 
* Edit database object callback
* Path: /forwarding-construct/fc-switch
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_fc_switch_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_fc_switch_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_forwarding_direction_edit
* 
* Edit database object callback
* Path: /forwarding-construct/forwarding-direction
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_forwarding_direction_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


#ifdef u_core_model_F_protection_exclude_server
/********************************************************************
* FUNCTION u_core_model_forwarding_construct_is_protection_lock_out_edit
* 
* Edit database object callback
* Path: /forwarding-construct/is-protection-lock-out
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_is_protection_lock_out_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);

#endif /* u_core_model_F_protection_exclude_server */

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_service_priority_edit
* 
* Edit database object callback
* Path: /forwarding-construct/service-priority
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_service_priority_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_supported_link_edit
* 
* Edit database object callback
* Path: /forwarding-construct/supported-link
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_supported_link_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_local_id_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_local_id_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_local_id_edit
* 
* Edit database object callback
* Path: /forwarding-construct/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_uuid_edit
* 
* Edit database object callback
* Path: /forwarding-construct/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_name_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_name_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_name_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_label_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_label_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_label_edit
* 
* Edit database object callback
* Path: /forwarding-construct/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_label_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_extension_value_name_edit
* 
* Edit database object callback
* Path: /forwarding-construct/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_extension_value_edit
* 
* Edit database object callback
* Path: /forwarding-construct/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_extension_edit
* 
* Edit database object callback
* Path: /forwarding-construct/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid,
    const xmlChar *k_forwarding_construct_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_operational_state_get
* 
* Get database object callback
* Path: /forwarding-construct/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_administrative_control_edit
* 
* Edit database object callback
* Path: /forwarding-construct/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);

/********************************************************************
* FUNCTION u_core_model_forwarding_construct_administrative_state_get
* 
* Get database object callback
* Path: /forwarding-construct/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_lifecycle_state_edit
* 
* Edit database object callback
* Path: /forwarding-construct/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_forwarding_construct_edit
* 
* Edit database object callback
* Path: /forwarding-construct
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_forwarding_construct_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_forwarding_construct_uuid);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_after_operation_set_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/after-operation-set
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_after_operation_set_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_before_operation_set_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/before-operation-set
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_before_operation_set_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_effort_and_action_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/effort-and-action
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_effort_and_action_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_pause_resume_rule_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/pause-resume-rule
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_pause_resume_rule_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_operationset_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/operationset
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_operationset_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_is_short_lived_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/is-short-lived
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_is_short_lived_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_operation_details_action_verb_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/operation-details/action-verb
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_operation_details_action_verb_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action,
    xmlChar *k_operation_envelope_operation_set_operation_details_action_verb);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_is_not_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/operation-details/necessary-initialcondition-constraints/is-not
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_is_not_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action,
    xmlChar *k_operation_envelope_operation_set_operation_details_action_verb,
    boolean k_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_is_not);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/operation-details/necessary-initialcondition-constraints
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action,
    xmlChar *k_operation_envelope_operation_set_operation_details_action_verb,
    boolean k_operation_envelope_operation_set_operation_details_necessary_initialcondition_constraints_is_not);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_operation_details_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set/operation-details
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_operation_details_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action,
    xmlChar *k_operation_envelope_operation_set_operation_details_action_verb);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operation_set_edit
* 
* Edit database object callback
* Path: /operation-envelope/operation-set
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operation_set_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    xmlChar *k_operation_envelope_operation_set_effort_and_action);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_generaldirectives_edit
* 
* Edit database object callback
* Path: /operation-envelope/generaldirectives
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_generaldirectives_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_operationidentifiers_edit
* 
* Edit database object callback
* Path: /operation-envelope/operationidentifiers
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_operationidentifiers_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_core_model_operation_envelope_edit
* 
* Edit database object callback
* Path: /operation-envelope
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_operation_envelope_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_connector_edit
* 
* Edit database object callback
* Path: /equipment/connector/connector
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_connector_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_pin_position_edit
* 
* Edit database object callback
* Path: /equipment/connector/pin/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_pin_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_pin_position);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_pin_orientation_edit
* 
* Edit database object callback
* Path: /equipment/connector/pin/orientation
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_pin_orientation_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_pin_position);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_pin_edit
* 
* Edit database object callback
* Path: /equipment/connector/pin
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_pin_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_pin_position);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_orientation_edit
* 
* Edit database object callback
* Path: /equipment/connector/orientation
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_orientation_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/manufacturer-properties/manufacturer-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_manufacturer_properties_manufacturer_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/manufacturer-properties/manufacturer-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_manufacturer_properties_manufacturer_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_manufacturer_properties_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/manufacturer-properties
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_manufacturer_properties_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_type_description_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-type/description
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_type_description_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_type_model_identifier_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-type/model-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_type_model_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_type_part_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-type/part-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_type_part_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_type_type_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-type/type-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_type_type_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_type_version_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-type/version
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_type_version_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_instance_manufacture_date_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-instance/manufacture-date
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_instance_manufacture_date_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_instance_serial_number_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-instance/serial-number
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_instance_serial_number_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_instance_asset_instance_identifier_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-instance/asset-instance-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_instance_asset_instance_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_equipment_instance_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/equipment-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_equipment_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/operator-augmented-equipment-type/asset-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_operator_augmented_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing/operator-augmented-equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_operator_augmented_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_manufactured_thing_edit
* 
* Edit database object callback
* Path: /equipment/connector/manufactured-thing
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_manufactured_thing_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_position_relative_position_edit
* 
* Edit database object callback
* Path: /equipment/connector/position/relative-position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_position_relative_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_position_edit
* 
* Edit database object callback
* Path: /equipment/connector/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_mechanical_features_edit
* 
* Edit database object callback
* Path: /equipment/connector/mechanical-features
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_mechanical_features_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_pin_layout_position_relative_position_edit
* 
* Edit database object callback
* Path: /equipment/connector/pin-layout/position/relative-position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_pin_layout_position_relative_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_pin_layout_position_relative_position);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_pin_layout_position_edit
* 
* Edit database object callback
* Path: /equipment/connector/pin-layout/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_pin_layout_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_pin_layout_position_relative_position);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_pin_layout_edit
* 
* Edit database object callback
* Path: /equipment/connector/pin-layout
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_pin_layout_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_connector_type_edit
* 
* Edit database object callback
* Path: /equipment/connector/connector-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_connector_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/connector/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_local_id_edit
* 
* Edit database object callback
* Path: /equipment/connector/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_uuid_edit
* 
* Edit database object callback
* Path: /equipment/connector/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_name_value_edit
* 
* Edit database object callback
* Path: /equipment/connector/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_label_value_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_label_value_edit
* 
* Edit database object callback
* Path: /equipment/connector/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_label_edit
* 
* Edit database object callback
* Path: /equipment/connector/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_extension_value_name_edit
* 
* Edit database object callback
* Path: /equipment/connector/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_extension_value_edit
* 
* Edit database object callback
* Path: /equipment/connector/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_extension_edit
* 
* Edit database object callback
* Path: /equipment/connector/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid,
    const xmlChar *k_equipment_connector_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_equipment_connector_operational_state_get
* 
* Get database object callback
* Path: /equipment/connector/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_administrative_control_edit
* 
* Edit database object callback
* Path: /equipment/connector/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);

/********************************************************************
* FUNCTION u_core_model_equipment_connector_administrative_state_get
* 
* Get database object callback
* Path: /equipment/connector/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_lifecycle_state_edit
* 
* Edit database object callback
* Path: /equipment/connector/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_connector_edit
* 
* Edit database object callback
* Path: /equipment/connector
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_connector_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_connector_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/connector
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_connector_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_occupying_fru_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/occupying-fru
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_occupying_fru_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_spatial_properties_of_type_height_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/spatial-properties-of-type/height
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_spatial_properties_of_type_height_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_spatial_properties_of_type_width_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/spatial-properties-of-type/width
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_spatial_properties_of_type_width_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_spatial_properties_of_type_length_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/spatial-properties-of-type/length
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_spatial_properties_of_type_length_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_spatial_properties_of_type_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/spatial-properties-of-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_spatial_properties_of_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_monitors_is_active_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-monitors/is-active
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_monitors_is_active_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_monitors_is_actual_mismatch_with_expected_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-monitors/is-actual-mismatch-with-expected
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_monitors_is_actual_mismatch_with_expected_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_monitors_aggregate_function_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-monitors/aggregate-function
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_monitors_aggregate_function_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_monitors_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-monitors
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_monitors_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_address_element_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/address-element-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_address_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_local_id_class_of_instance_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/local-id/class-of-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_local_id_class_of_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_local_id_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/local-id/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_local_id_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_local_id_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/local-id/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_local_id_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_local_id_local_id_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/local-id/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_local_id_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_local_id_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_uuid_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_name_class_of_instance_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/name/class-of-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_name_class_of_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_name_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/name/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_name_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_name_name_value_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/name/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_name_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_name_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/name/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_name_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_arbitrary_element_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element/arbitrary-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_arbitrary_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_address_element_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location/address-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_address_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_holder_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_location_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-location
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_location_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_position_relative_position_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/position/relative-position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_position_relative_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_position_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_structure_holder_category_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-structure/holder-category
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_structure_holder_category_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_structure_is_captive_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-structure/is-captive
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_structure_is_captive_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_structure_is_guided_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-structure/is-guided
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_structure_is_guided_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_structure_is_quantized_space_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-structure/is-quantized-space
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_structure_is_quantized_space_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_holder_structure_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/holder-structure
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_holder_structure_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_physical_rating_thermal_rating_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/physical-rating/thermal-rating
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_physical_rating_thermal_rating_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_physical_rating_power_rating_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/physical-rating/power-rating
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_physical_rating_power_rating_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_physical_rating_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/physical-rating
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_physical_rating_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_supported_equipment_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/supported-equipment
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_supported_equipment_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_expected_holder_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/expected-holder
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_expected_holder_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_actual_holder_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/actual-holder
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_actual_holder_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_local_id_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_uuid_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_name_value_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_label_value_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_label_value_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_label_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_extension_value_name_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_extension_value_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_extension_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid,
    const xmlChar *k_equipment_contained_holder_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_operational_state_get
* 
* Get database object callback
* Path: /equipment/contained-holder/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_administrative_control_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);

/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_administrative_state_get
* 
* Get database object callback
* Path: /equipment/contained-holder/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_lifecycle_state_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_contained_holder_edit
* 
* Edit database object callback
* Path: /equipment/contained-holder
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_contained_holder_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_contained_holder_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_connector_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/connector
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_connector_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_pin_position_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/pin/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_pin_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_pin_position);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_pin_orientation_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/pin/orientation
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_pin_orientation_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_pin_position);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_pin_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/pin
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_pin_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_pin_position);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_orientation_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/orientation
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_orientation_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/manufacturer-properties/manufacturer-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_manufacturer_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/manufacturer-properties/manufacturer-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_manufacturer_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/manufacturer-properties
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_manufacturer_properties_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_description_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-type/description
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_description_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_model_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-type/model-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_model_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_part_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-type/part-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_part_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_type_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-type/type-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_type_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_version_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-type/version
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_version_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_manufacture_date_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-instance/manufacture-date
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_manufacture_date_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_serial_number_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-instance/serial-number
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_serial_number_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_asset_instance_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-instance/asset-instance-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_asset_instance_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/equipment-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_equipment_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/operator-augmented-equipment-type/asset-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing/operator-augmented-equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_operator_augmented_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_manufactured_thing_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/manufactured-thing
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_manufactured_thing_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_position_relative_position_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/position/relative-position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_position_relative_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_position_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_mechanical_features_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/mechanical-features
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_mechanical_features_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_pin_layout_position_relative_position_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/pin-layout/position/relative-position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_pin_layout_position_relative_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_pin_layout_position_relative_position);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_pin_layout_position_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/pin-layout/position
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_pin_layout_position_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_pin_layout_position_relative_position);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_pin_layout_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/pin-layout
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_pin_layout_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_connector_type_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/connector-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_connector_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_local_id_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_uuid_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_name_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_label_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_label_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_label_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_extension_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_extension_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_extension_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_operational_state_get
* 
* Get database object callback
* Path: /equipment/exposed-cable/connector/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_administrative_control_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);

/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_administrative_state_get
* 
* Get database object callback
* Path: /equipment/exposed-cable/connector/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_lifecycle_state_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_connector_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/connector
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_connector_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_connector_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/manufacturer-properties/manufacturer-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_manufacturer_properties_manufacturer_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/manufacturer-properties/manufacturer-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_manufacturer_properties_manufacturer_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_manufacturer_properties_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/manufacturer-properties
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_manufacturer_properties_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_description_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-type/description
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_description_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_model_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-type/model-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_model_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_part_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-type/part-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_part_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_type_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-type/type-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_type_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_version_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-type/version
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_version_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_manufacture_date_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-instance/manufacture-date
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_manufacture_date_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_serial_number_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-instance/serial-number
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_serial_number_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_asset_instance_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-instance/asset-instance-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_asset_instance_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/equipment-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_equipment_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/operator-augmented-equipment-type/asset-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing/operator-augmented-equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_operator_augmented_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_manufactured_thing_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/manufactured-thing
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_manufactured_thing_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_physical_characteristics_weight_characteristics_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/physical-characteristics/weight-characteristics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_physical_characteristics_weight_characteristics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_physical_characteristics_fire_characteristics_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/physical-characteristics/fire-characteristics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_physical_characteristics_fire_characteristics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_physical_characteristics_materials_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/physical-characteristics/materials
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_physical_characteristics_materials_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_physical_characteristics_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/physical-characteristics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_physical_characteristics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_mechanical_features_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/mechanical-features
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_mechanical_features_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_spatial_properties_of_type_height_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/spatial-properties-of-type/height
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_spatial_properties_of_type_height_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_spatial_properties_of_type_width_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/spatial-properties-of-type/width
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_spatial_properties_of_type_width_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_spatial_properties_of_type_length_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/spatial-properties-of-type/length
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_spatial_properties_of_type_length_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_spatial_properties_of_type_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/spatial-properties-of-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_spatial_properties_of_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_local_id_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_uuid_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_name_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_label_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_label_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_label_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_extension_value_name_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_extension_value_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_extension_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid,
    const xmlChar *k_equipment_exposed_cable_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_operational_state_get
* 
* Get database object callback
* Path: /equipment/exposed-cable/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_administrative_control_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);

/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_administrative_state_get
* 
* Get database object callback
* Path: /equipment/exposed-cable/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_lifecycle_state_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_exposed_cable_edit
* 
* Edit database object callback
* Path: /equipment/exposed-cable
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_exposed_cable_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_exposed_cable_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/manufacturer-properties/manufacturer-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_manufacturer_properties_manufacturer_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_manufacturer_properties_manufacturer_name_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/manufacturer-properties/manufacturer-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_manufacturer_properties_manufacturer_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_manufacturer_properties_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/manufacturer-properties
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_manufacturer_properties_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_type_description_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-type/description
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_type_description_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_type_model_identifier_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-type/model-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_type_model_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_type_part_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-type/part-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_type_part_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_type_type_name_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-type/type-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_type_type_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_type_version_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-type/version
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_type_version_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_instance_manufacture_date_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-instance/manufacture-date
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_instance_manufacture_date_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_instance_serial_number_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-instance/serial-number
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_instance_serial_number_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_instance_asset_instance_identifier_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-instance/asset-instance-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_instance_asset_instance_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_equipment_instance_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/equipment-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_equipment_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/operator-augmented-equipment-type/asset-type-identifier
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_operator_augmented_equipment_type_asset_type_identifier_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_operator_augmented_equipment_type_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing/operator-augmented-equipment-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_operator_augmented_equipment_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_manufactured_thing_edit
* 
* Edit database object callback
* Path: /equipment/manufactured-thing
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_manufactured_thing_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_spatial_properties_of_type_height_edit
* 
* Edit database object callback
* Path: /equipment/spatial-properties-of-type/height
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_spatial_properties_of_type_height_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_spatial_properties_of_type_width_edit
* 
* Edit database object callback
* Path: /equipment/spatial-properties-of-type/width
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_spatial_properties_of_type_width_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_spatial_properties_of_type_length_edit
* 
* Edit database object callback
* Path: /equipment/spatial-properties-of-type/length
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_spatial_properties_of_type_length_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_spatial_properties_of_type_edit
* 
* Edit database object callback
* Path: /equipment/spatial-properties-of-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_spatial_properties_of_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_mechanical_features_edit
* 
* Edit database object callback
* Path: /equipment/mechanical-features
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_mechanical_features_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_properties_temperature_edit
* 
* Edit database object callback
* Path: /equipment/physical-properties/temperature
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_properties_temperature_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_properties_edit
* 
* Edit database object callback
* Path: /equipment/physical-properties
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_properties_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_function_enablers_power_state_edit
* 
* Edit database object callback
* Path: /equipment/function-enablers/power-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_function_enablers_power_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_function_enablers_edit
* 
* Edit database object callback
* Path: /equipment/function-enablers
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_function_enablers_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_mechanical_functions_rotation_speed_edit
* 
* Edit database object callback
* Path: /equipment/mechanical-functions/rotation-speed
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_mechanical_functions_rotation_speed_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_mechanical_functions_edit
* 
* Edit database object callback
* Path: /equipment/mechanical-functions
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_mechanical_functions_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_characteristics_weight_characteristics_edit
* 
* Edit database object callback
* Path: /equipment/physical-characteristics/weight-characteristics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_characteristics_weight_characteristics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_characteristics_fire_characteristics_edit
* 
* Edit database object callback
* Path: /equipment/physical-characteristics/fire-characteristics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_characteristics_fire_characteristics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_characteristics_materials_edit
* 
* Edit database object callback
* Path: /equipment/physical-characteristics/materials
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_characteristics_materials_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_characteristics_edit
* 
* Edit database object callback
* Path: /equipment/physical-characteristics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_characteristics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_swapability_is_hot_swappable_edit
* 
* Edit database object callback
* Path: /equipment/swapability/is-hot-swappable
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_swapability_is_hot_swappable_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_swapability_edit
* 
* Edit database object callback
* Path: /equipment/swapability
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_swapability_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_category_category_edit
* 
* Edit database object callback
* Path: /equipment/category/category
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_category_category_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_category_edit
* 
* Edit database object callback
* Path: /equipment/category
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_category_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_rating_thermal_rating_edit
* 
* Edit database object callback
* Path: /equipment/physical-rating/thermal-rating
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_rating_thermal_rating_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_rating_power_rating_edit
* 
* Edit database object callback
* Path: /equipment/physical-rating/power-rating
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_rating_power_rating_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_physical_rating_edit
* 
* Edit database object callback
* Path: /equipment/physical-rating
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_physical_rating_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);

/********************************************************************
* FUNCTION u_core_model_equipment_is_field_replaceable_get
* 
* Get database object callback
* Path: /equipment/is-field-replaceable
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_is_field_replaceable_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_function_block_edit
* 
* Edit database object callback
* Path: /equipment/function-block
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_function_block_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_expected_equipment_edit
* 
* Edit database object callback
* Path: /equipment/expected-equipment
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_expected_equipment_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_actual_equipment_edit
* 
* Edit database object callback
* Path: /equipment/actual-equipment
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_actual_equipment_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_name_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_address_element_name_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/address-element-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_address_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_local_id_class_of_instance_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/local-id/class-of-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_local_id_class_of_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_local_id_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/local-id/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_local_id_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_local_id_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/local-id/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_local_id_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_local_id_local_id_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/local-id/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_local_id_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_local_id_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_uuid_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_name_class_of_instance_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/name/class-of-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_name_class_of_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_name_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/name/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_name_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_name_name_value_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/name/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_name_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_name_name_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/name/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_name_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_name_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_arbitrary_element_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element/arbitrary-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_arbitrary_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_address_element_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location/address-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_address_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_equipment_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_equipment_location_edit
* 
* Edit database object callback
* Path: /equipment/location/equipment-location
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_equipment_location_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_name_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_address_element_name_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/address-element-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_address_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_local_id_class_of_instance_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/local-id/class-of-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_local_id_class_of_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_local_id_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/local-id/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_local_id_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_local_id_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/local-id/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_local_id_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_local_id_local_id_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/local-id/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_local_id_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_local_id_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_uuid_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_name_class_of_instance_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/name/class-of-instance
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_name_class_of_instance_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_name_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/name/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_name_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_name_name_value_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/name/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_name_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_name_name_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/name/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_name_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_name_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_arbitrary_element_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element/arbitrary-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_arbitrary_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_address_element_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location/address-element
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_address_element_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_location_geographical_location_address_element_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_geographical_location_edit
* 
* Edit database object callback
* Path: /equipment/location/geographical-location
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_geographical_location_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_location_edit
* 
* Edit database object callback
* Path: /equipment/location
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_location_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_local_id_value_name_edit
* 
* Edit database object callback
* Path: /equipment/local-id/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_local_id_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_local_id_value_edit
* 
* Edit database object callback
* Path: /equipment/local-id/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_local_id_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_local_id_edit
* 
* Edit database object callback
* Path: /equipment/local-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_local_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_local_id_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_uuid_edit
* 
* Edit database object callback
* Path: /equipment/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_name_value_name_edit
* 
* Edit database object callback
* Path: /equipment/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_name_value_edit
* 
* Edit database object callback
* Path: /equipment/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_name_edit
* 
* Edit database object callback
* Path: /equipment/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_name_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_label_value_name_edit
* 
* Edit database object callback
* Path: /equipment/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_label_value_edit
* 
* Edit database object callback
* Path: /equipment/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_label_edit
* 
* Edit database object callback
* Path: /equipment/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_label_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_extension_value_name_edit
* 
* Edit database object callback
* Path: /equipment/extension/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_extension_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_extension_value_edit
* 
* Edit database object callback
* Path: /equipment/extension/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_extension_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_extension_value_name);


/********************************************************************
* FUNCTION u_core_model_equipment_extension_edit
* 
* Edit database object callback
* Path: /equipment/extension
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_extension_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid,
    const xmlChar *k_equipment_extension_value_name);

/********************************************************************
* FUNCTION u_core_model_equipment_operational_state_get
* 
* Get database object callback
* Path: /equipment/operational-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_operational_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_administrative_control_edit
* 
* Edit database object callback
* Path: /equipment/administrative-control
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_administrative_control_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);

/********************************************************************
* FUNCTION u_core_model_equipment_administrative_state_get
* 
* Get database object callback
* Path: /equipment/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_lifecycle_state_edit
* 
* Edit database object callback
* Path: /equipment/lifecycle-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_lifecycle_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);


/********************************************************************
* FUNCTION u_core_model_equipment_edit
* 
* Edit database object callback
* Path: /equipment
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_equipment_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_equipment_uuid);

/********************************************************************
* FUNCTION u_core_model_init
* 
* initialize the core-model server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_core_model_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_core_model_init2 (void);

/********************************************************************
* FUNCTION u_core_model_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_core_model_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif