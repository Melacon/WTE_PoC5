
#ifndef _H_u_microwave_model
#define _H_u_microwave_model
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module microwave-model
    revision 2018-10-10
    namespace urn:onf:params:xml:ns:yang:microwave-model
    organization ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "agt_not.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_microwave-model.h"

#ifdef __cplusplus
extern "C" {
#endif
/* Feature microwave-model:pure-ethernet
 * Comment out to disable */
#define u_microwave_model_F_pure_ethernet 1

/* Feature microwave-model:hybrid-microwave
 * Comment out to disable */
#define u_microwave_model_F_hybrid_microwave 1



/* leaf-list /mw-air-interface-pac/air-interface-capability/supported-loop-back-kind-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_loop_back_kind_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_loop_back_kind_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_loop_back_kind_list;

/* leaf-list /mw-air-interface-pac/air-interface-capability/supported-alarm-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_alarm_list;

/* leaf-list /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/duplex-distance-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_list_ {
    dlq_hdr_t qhdr;
    int32 duplex_distance_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_list;

/* list /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_ {
    dlq_hdr_t qhdr;
    xmlChar *transmission_mode_id;
    xmlChar *transmission_mode_name;
    int32 channel_bandwidth;
    int16 modulation_scheme;
    int8 code_rate;
    int8 symbol_rate_reduction_factor;
    int8 tx_power_min;
    int8 tx_power_max;
    int16 rx_threshold;
    int8 am_upshift_level;
    int8 am_downshift_level;
    boolean xpic_is_avail;
} y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list;

/* list /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_channel_plan;
    boolean duplex_distance_is_variable;
    dlq_hdr_t duplex_distance_list;
    int32 duplex_distance;
    boolean auto_freq_select_is_avail;
    dlq_hdr_t transmission_mode_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list;

/* container /mw-air-interface-pac/air-interface-capability */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_capability_ {
    xmlChar *type_of_equipment;
    int32 tx_frequency_min;
    int32 tx_frequency_max;
    int32 rx_frequency_min;
    int32 rx_frequency_max;
    boolean adaptive_modulation_is_avail;
    boolean mimo_is_avail;
    int8 mimo_channels;
    boolean alic_is_avail;
    boolean atpc_is_avail;
    int8 atpc_range;
    boolean encryption_is_avail;
    dlq_hdr_t supported_loop_back_kind_list;
    xmlChar *maintenance_timer_range;
    dlq_hdr_t supported_alarm_list;
    xmlChar *supported_alarms;
    dlq_hdr_t supported_channel_plan_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_capability;

/* list /mw-air-interface-pac/air-interface-configuration/threshold-cross-alarm-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *g826_value_kind;
    xmlChar *granularity_period;
    int32 alarm_raising_threshold;
    int32 alarm_clearing_threshold;
} y_microwave_model_T_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list;

/* list /mw-air-interface-pac/air-interface-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list;

/* container /mw-air-interface-pac/air-interface-configuration */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_configuration_ {
    xmlChar *air_interface_name;
    xmlChar *remote_air_interface_name;
    int16 expected_signal_id;
    int16 transmitted_signal_id;
    xmlChar *radio_signal_id;
    int32 tx_frequency;
    int32 rx_frequency;
    xmlChar *transmission_mode_min;
    xmlChar *transmission_mode_max;
    int32 tx_channel_bandwidth;
    int32 rx_channel_bandwidth;
    xmlChar *polarization;
    boolean power_is_on;
    boolean transmitter_is_on;
    boolean receiver_is_on;
    int8 tx_power;
    boolean adaptive_modulation_is_on;
    int16 modulation_min;
    int16 modulation_max;
    boolean xpic_is_on;
    boolean mimo_is_on;
    boolean alic_is_on;
    boolean atpc_is_on;
    int16 atpc_thresh_upper;
    int16 atpc_thresh_lower;
    int8 atpc_tx_power_min;
    boolean auto_freq_select_is_on;
    int8 auto_freq_select_range;
    boolean modulation_is_on;
    boolean encryption_is_on;
    xmlChar *cryptographic_key;
    boolean performance_monitoring_collection_is_on;
    dlq_hdr_t threshold_cross_alarm_list;
    xmlChar *loop_back_kind_on;
    int32 maintenance_timer;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_configuration;

/* container /mw-air-interface-pac/air-interface-status */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_status_ {
    int32 tx_frequency_cur;
    int32 rx_frequency_cur;
    int8 tx_level_cur;
    int8 rx_level_cur;
    xmlChar *transmission_mode_cur;
    int16 modulation_cur;
    int8 code_rate_cur;
    int16 received_signal_id;
    int8 snir_cur;
    int8 xpd_cur;
    int8 rf_temp_cur;
    xmlChar *last_status_change;
    boolean radio_power_is_up;
    boolean link_is_up;
    boolean xpic_is_up;
    boolean mimo_is_up;
    boolean alic_is_up;
    boolean atpc_is_up;
    boolean auto_freq_select_is_up;
    xmlChar *loop_back_kind_up;
    xmlChar *local_end_point_id;
    xmlChar *remote_end_point_id;
} y_microwave_model_T_mw_air_interface_pac_air_interface_status;

/* list /mw-air-interface-pac/air-interface-current-problems/current-problem-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_mw_air_interface_pac_air_interface_current_problems_current_problem_list;

/* container /mw-air-interface-pac/air-interface-current-problems */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_current_problems;

/* list /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time-x-states-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list_ {
    dlq_hdr_t qhdr;
    xmlChar *transmission_mode;
    int32 time;
} y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list;

/* container /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_ {
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 tx_level_min;
    int8 tx_level_max;
    int8 tx_level_avg;
    int8 rx_level_min;
    int8 rx_level_max;
    int8 rx_level_avg;
    dlq_hdr_t time_x_states_list;
    int32 time2_states;
    int32 time4_states_s;
    int32 time4_states;
    int32 time8_states;
    int32 time16_states_s;
    int32 time16_states;
    int32 time32_states;
    int32 time64_states;
    int32 time128_states;
    int32 time256_states;
    int32 time512_states;
    int32 time512_states_l;
    int32 time1024_states;
    int32 time1024_states_l;
    int32 time2048_states;
    int32 time2048_states_l;
    int32 time4096_states;
    int32 time4096_states_l;
    int32 time8192_states;
    int32 time8192_states_l;
    int8 snir_min;
    int8 snir_max;
    int8 snir_avg;
    int8 xpd_min;
    int8 xpd_max;
    int8 xpd_avg;
    int8 rf_temp_min;
    int8 rf_temp_max;
    int8 rf_temp_avg;
    int16 defect_blocks_sum;
    int32 time_period;
} y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data;

/* list /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list;

/* container /mw-air-interface-pac/air-interface-current-performance */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance;

/* list /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time-x-states-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list_ {
    dlq_hdr_t qhdr;
    xmlChar *transmission_mode;
    int32 time;
} y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list;

/* container /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_ {
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 tx_level_min;
    int8 tx_level_max;
    int8 tx_level_avg;
    int8 rx_level_min;
    int8 rx_level_max;
    int8 rx_level_avg;
    dlq_hdr_t time_x_states_list;
    int32 time2_states;
    int32 time4_states_s;
    int32 time4_states;
    int32 time8_states;
    int32 time16_states_s;
    int32 time16_states;
    int32 time32_states;
    int32 time64_states;
    int32 time128_states;
    int32 time256_states;
    int32 time512_states;
    int32 time512_states_l;
    int32 time1024_states;
    int32 time1024_states_l;
    int32 time2048_states;
    int32 time2048_states_l;
    int32 time4096_states;
    int32 time4096_states_l;
    int32 time8192_states;
    int32 time8192_states_l;
    int8 snir_min;
    int8 snir_max;
    int8 snir_avg;
    int8 xpd_min;
    int8 xpd_max;
    int8 xpd_avg;
    int8 rf_temp_min;
    int8 rf_temp_max;
    int8 rf_temp_avg;
    int16 defect_blocks_sum;
    int32 time_period;
} y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data;

/* list /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list;

/* container /mw-air-interface-pac/air-interface-historical-performances */
typedef struct y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances;

/* list /mw-air-interface-pac */
typedef struct y_microwave_model_T_mw_air_interface_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_mw_air_interface_pac_air_interface_capability air_interface_capability;
    y_microwave_model_T_mw_air_interface_pac_air_interface_configuration air_interface_configuration;
    y_microwave_model_T_mw_air_interface_pac_air_interface_status air_interface_status;
    y_microwave_model_T_mw_air_interface_pac_air_interface_current_problems air_interface_current_problems;
    y_microwave_model_T_mw_air_interface_pac_air_interface_current_performance air_interface_current_performance;
    y_microwave_model_T_mw_air_interface_pac_air_interface_historical_performances air_interface_historical_performances;
} y_microwave_model_T_mw_air_interface_pac;

/* leaf-list /co-channel-group/air-interface-list */
typedef struct y_microwave_model_T_co_channel_group_air_interface_list_ {
    dlq_hdr_t qhdr;
    xmlChar *air_interface_list;
} y_microwave_model_T_co_channel_group_air_interface_list;

/* leaf-list /co-channel-group/logical-termination-point */
typedef struct y_microwave_model_T_co_channel_group_logical_termination_point_ {
    dlq_hdr_t qhdr;
    xmlChar *logical_termination_point;
} y_microwave_model_T_co_channel_group_logical_termination_point;

/* list /co-channel-group */
typedef struct y_microwave_model_T_co_channel_group_ {
    dlq_hdr_t qhdr;
    xmlChar *co_channel_group_id;
    dlq_hdr_t air_interface_list;
    xmlChar *sort_of_co_channel_group;
    dlq_hdr_t logical_termination_point;
} y_microwave_model_T_co_channel_group;

/* list /mw-air-interface-hsb-end-point-pac */
typedef struct y_microwave_model_T_mw_air_interface_hsb_end_point_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *role;
    xmlChar *endpoint;
} y_microwave_model_T_mw_air_interface_hsb_end_point_pac;

/* list /mw-air-interface-hsb-fc-switch-pac */
typedef struct y_microwave_model_T_mw_air_interface_hsb_fc_switch_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *prot_type;
    xmlChar *air_interface_hsb_configuration_is_faulty_severity;
    xmlChar *air_interface_hsb_is_partly_down_severity;
    xmlChar *air_interface_hsb_is_down_severity;
    xmlChar *fcswitch;
} y_microwave_model_T_mw_air_interface_hsb_fc_switch_pac;

/* list /mw-air-interface-diversity-pac/air-interface-diversity-capability/available-kinds-of-diversity */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity_ {
    dlq_hdr_t qhdr;
    xmlChar *diversity_name;
    int8 number_of_air_interfaces_max;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity;

/* leaf-list /mw-air-interface-diversity-pac/air-interface-diversity-capability/supported-alarm-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability_supported_alarm_list;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-capability */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability_ {
    dlq_hdr_t available_kinds_of_diversity;
    dlq_hdr_t supported_alarm_list;
    xmlChar *supported_alarms;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-configuration/air-interface-diversity */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_ {
    xmlChar *diversity_name;
    int8 number_of_air_interfaces_max;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity;

/* leaf-list /mw-air-interface-diversity-pac/air-interface-diversity-configuration/air-interface-ltp-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_ltp_list_ {
    dlq_hdr_t qhdr;
    xmlChar *air_interface_ltp_list;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_ltp_list;

/* list /mw-air-interface-diversity-pac/air-interface-diversity-configuration/threshold-cross-alarm-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *g826_value_kind;
    xmlChar *granularity_period;
    int32 alarm_raising_threshold;
    int32 alarm_clearing_threshold;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list;

/* list /mw-air-interface-diversity-pac/air-interface-diversity-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-configuration */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_ {
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity air_interface_diversity;
    dlq_hdr_t air_interface_ltp_list;
    boolean performance_monitoring_collection_is_on;
    dlq_hdr_t threshold_cross_alarm_list;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-status */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_status_ {
    int8 snir_cur;
    xmlChar *air_interface_diversity_status;
    xmlChar *last_status_change;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_status;

/* list /mw-air-interface-diversity-pac/air-interface-diversity-current-problems/current-problem-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-current-problems */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_problems;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_ {
    int8 snir_min;
    int8 snir_max;
    int8 snir_avg;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data;

/* list /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-current-performance */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_ {
    int8 snir_min;
    int8 snir_max;
    int8 snir_avg;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data;

/* list /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list;

/* container /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances;

/* list /mw-air-interface-diversity-pac */
typedef struct y_microwave_model_T_mw_air_interface_diversity_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_capability air_interface_diversity_capability;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_configuration air_interface_diversity_configuration;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_status air_interface_diversity_status;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_problems air_interface_diversity_current_problems;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_current_performance air_interface_diversity_current_performance;
    y_microwave_model_T_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances air_interface_diversity_historical_performances;
} y_microwave_model_T_mw_air_interface_diversity_pac;

/* leaf-list /mw-pure-ethernet-structure-pac/pure-ethernet-structure-capability/supported-alarm-list */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_supported_alarm_list;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-capability */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_ {
    xmlChar *structure_id;
    dlq_hdr_t supported_alarm_list;
    xmlChar *supported_alarms;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability;

/* list /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_ {
    boolean performance_monitoring_collection_is_on;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/segment-status-list */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_ {
    int16 segment_status_type_id;
    boolean segment_is_reserved_for_tdm;
    xmlChar *operational_status;
    int8 obsolete_priority_class;
    int16 obsolete_drop_order_rank;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_ {
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list segment_status_list;
    xmlChar *last_status_change;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status;

/* list /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-problems/current-problem-list */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-problems */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_ {
    int32 time_period;
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 rx_level_min;
    int8 rx_level_max;
    int8 rx_level_avg;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data;

/* list /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_ {
    int32 time_period;
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 rx_level_min;
    int8 rx_level_max;
    int8 rx_level_avg;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data;

/* list /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list;

/* container /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances;


#ifdef u_microwave_model_F_pure_ethernet
/* list /mw-pure-ethernet-structure-pac */
typedef struct y_microwave_model_T_mw_pure_ethernet_structure_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability pure_ethernet_structure_capability;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration pure_ethernet_structure_configuration;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status pure_ethernet_structure_status;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems pure_ethernet_structure_current_problems;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance pure_ethernet_structure_current_performance;
    y_microwave_model_T_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances pure_ethernet_structure_historical_performances;
} y_microwave_model_T_mw_pure_ethernet_structure_pac;
#endif /* u_microwave_model_F_pure_ethernet */

/* list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-tdm-structure-types-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_ {
    dlq_hdr_t qhdr;
    xmlChar *tdm_structure_name;
    int32 tdm_segment_size;
    int8 max_number_of_segments_reservable;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list;

/* leaf-list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-alarm-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_alarm_list;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_ {
    xmlChar *structure_id;
    dlq_hdr_t supported_tdm_structure_types_list;
    dlq_hdr_t supported_alarm_list;
    xmlChar *supported_alarms;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-kind */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_ {
    xmlChar *tdm_structure_name;
    int32 tdm_segment_size;
    int8 max_number_of_segments_reservable;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-type */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_ {
    xmlChar *tdm_structure_name;
    int32 tdm_segment_size;
    int8 max_number_of_segments_reservable;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type;

/* list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_ {
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind structure_kind;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type structure_type;
    int16 number_of_tdm_segments_to_be_reserved;
    boolean performance_monitoring_collection_is_on;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration;

/* list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/segment-status-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_ {
    dlq_hdr_t qhdr;
    int16 segment_status_type_id;
    boolean segment_is_reserved_for_tdm;
    xmlChar *operational_status;
    int8 obsolete_priority_class;
    int16 obsolete_drop_order_rank;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_ {
    dlq_hdr_t segment_status_list;
    xmlChar *last_status_change;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status;

/* list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-problems/current-problem-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-problems */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_ {
    int32 time_period;
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 rx_level_min;
    int8 rx_level_max;
    int8 rx_level_avg;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data;

/* list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_ {
    int32 time_period;
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 rx_level_min;
    int8 rx_level_max;
    int8 rx_level_avg;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data;

/* list /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list;

/* container /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances;


#ifdef u_microwave_model_F_hybrid_microwave
/* list /mw-hybrid-mw-structure-pac */
typedef struct y_microwave_model_T_mw_hybrid_mw_structure_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability hybrid_mw_structure_capability;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration hybrid_mw_structure_configuration;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status hybrid_mw_structure_status;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems hybrid_mw_structure_current_problems;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance hybrid_mw_structure_current_performance;
    y_microwave_model_T_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances hybrid_mw_structure_historical_performances;
} y_microwave_model_T_mw_hybrid_mw_structure_pac;
#endif /* u_microwave_model_F_hybrid_microwave */

/* leaf-list /mw-ethernet-container-pac/ethernet-container-capability/supported-alarm-list */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_capability_supported_alarm_list;

/* container /mw-ethernet-container-pac/ethernet-container-capability */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_capability_ {
    boolean bundling_is_avail;
    boolean packet_compression_is_avail;
    boolean layer2_compression_is_avail;
    boolean vlan_compression_is_avail;
    boolean q_in_q_compression_is_avail;
    boolean mpls_compression_is_avail;
    boolean ipv4_compression_is_avail;
    boolean ipv6_compression_is_avail;
    boolean layer4_compression_is_avail;
    boolean encryption_is_avail;
    dlq_hdr_t supported_alarm_list;
    xmlChar *supported_alarms;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_capability;

/* list /mw-ethernet-container-pac/ethernet-container-configuration/segments-id-list */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_ {
    dlq_hdr_t qhdr;
    xmlChar *structure_id_ref;
    int16 segment_id_ref;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list;

/* list /mw-ethernet-container-pac/ethernet-container-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list;

/* container /mw-ethernet-container-pac/ethernet-container-configuration */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration_ {
    xmlChar *container_id;
    dlq_hdr_t segments_id_list;
    boolean packet_compression_is_on;
    boolean layer2_compression_is_on;
    boolean vlan_compression_is_on;
    boolean q_in_q_compression_is_on;
    boolean mpls_compression_is_on;
    boolean ipv4_compression_is_on;
    boolean ipv6_compression_is_on;
    boolean layer4_compression_is_on;
    boolean encryption_is_on;
    xmlChar *cryptographic_key;
    boolean performance_monitoring_collection_is_on;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration;

/* container /mw-ethernet-container-pac/ethernet-container-status */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_status_ {
    xmlChar *last_status_change;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_status;

/* list /mw-ethernet-container-pac/ethernet-container-current-problems/current-problem-list */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list;

/* container /mw-ethernet-container-pac/ethernet-container-current-problems */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_problems;

/* container /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_ {
    int32 tx_ethernet_bytes_max_s;
    int64 tx_ethernet_bytes_max_m;
    int64 tx_ethernet_bytes_sum;
    int32 time_period;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data;

/* list /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list;

/* container /mw-ethernet-container-pac/ethernet-container-current-performance */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance;

/* container /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_ {
    int32 tx_ethernet_bytes_max_s;
    int64 tx_ethernet_bytes_max_m;
    int64 tx_ethernet_bytes_sum;
    int32 time_period;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data;

/* list /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list;

/* container /mw-ethernet-container-pac/ethernet-container-historical-performances */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances;

/* list /mw-ethernet-container-pac */
typedef struct y_microwave_model_T_mw_ethernet_container_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_capability ethernet_container_capability;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_configuration ethernet_container_configuration;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_status ethernet_container_status;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_problems ethernet_container_current_problems;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_current_performance ethernet_container_current_performance;
    y_microwave_model_T_mw_ethernet_container_pac_ethernet_container_historical_performances ethernet_container_historical_performances;
} y_microwave_model_T_mw_ethernet_container_pac;

/* list /mw-tdm-container-pac/tdm-container-capability/supported-tdm-container-types-list */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list_ {
    dlq_hdr_t qhdr;
    xmlChar *tdm_container_name;
    int32 tdm_container_size;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list;

/* leaf-list /mw-tdm-container-pac/tdm-container-capability/supported-alarm-list */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability_supported_alarm_list;

/* container /mw-tdm-container-pac/tdm-container-capability */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability_ {
    dlq_hdr_t supported_tdm_container_types_list;
    dlq_hdr_t supported_alarm_list;
    xmlChar *supported_alarms;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability;

/* container /mw-tdm-container-pac/tdm-container-configuration/container-type */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_container_type_ {
    xmlChar *tdm_container_name;
    int32 tdm_container_size;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_container_type;

/* container /mw-tdm-container-pac/tdm-container-configuration/segment-id */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_segment_id_ {
    xmlChar *structure_id_ref;
    int16 segment_id_ref;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_segment_id;

/* list /mw-tdm-container-pac/tdm-container-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list;

/* container /mw-tdm-container-pac/tdm-container-configuration */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_ {
    xmlChar *container_id;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_container_type container_type;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration_segment_id segment_id;
    boolean performance_monitoring_collection_is_on;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration;

/* container /mw-tdm-container-pac/tdm-container-status */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_status_ {
    xmlChar *last_status_change;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_status;

/* list /mw-tdm-container-pac/tdm-container-current-problems/current-problem-list */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list;

/* container /mw-tdm-container-pac/tdm-container-current-problems */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_problems;

/* container /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_ {
    int32 tx_ethernet_bytes_max_s;
    int64 tx_ethernet_bytes_max_m;
    int64 tx_ethernet_bytes_sum;
    int32 time_period;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data;

/* list /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list;

/* container /mw-tdm-container-pac/tdm-container-current-performance */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance;

/* container /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_ {
    int32 tx_ethernet_bytes_max_s;
    int64 tx_ethernet_bytes_max_m;
    int64 tx_ethernet_bytes_sum;
    int32 time_period;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data;

/* list /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list;

/* container /mw-tdm-container-pac/tdm-container-historical-performances */
typedef struct y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances;


#ifdef u_microwave_model_F_hybrid_microwave
/* list /mw-tdm-container-pac */
typedef struct y_microwave_model_T_mw_tdm_container_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_capability tdm_container_capability;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_configuration tdm_container_configuration;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_status tdm_container_status;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_problems tdm_container_current_problems;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_current_performance tdm_container_current_performance;
    y_microwave_model_T_mw_tdm_container_pac_tdm_container_historical_performances tdm_container_historical_performances;
} y_microwave_model_T_mw_tdm_container_pac;
#endif /* u_microwave_model_F_hybrid_microwave */

/* leaf-list /wire-interface-pac/wirebased-interface-capability/available-mau-list/wavelength-min */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_min_ {
    dlq_hdr_t qhdr;
    int32 wavelength_min;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_min;

/* leaf-list /wire-interface-pac/wirebased-interface-capability/available-mau-list/wavelength-max */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_max_ {
    dlq_hdr_t qhdr;
    int32 wavelength_max;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_max;

/* leaf-list /wire-interface-pac/wirebased-interface-capability/available-mau-list/pmd-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_pmd_list_ {
    dlq_hdr_t qhdr;
    xmlChar *pmd_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_pmd_list;

/* leaf-list /wire-interface-pac/wirebased-interface-capability/available-mau-list/signal-ordering-list/signal-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_list_ {
    dlq_hdr_t qhdr;
    xmlChar *signal_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_list;

/* list /wire-interface-pac/wirebased-interface-capability/available-mau-list/signal-ordering-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_ {
    dlq_hdr_t qhdr;
    xmlChar *signal_ordering_kind_name;
    dlq_hdr_t signal_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list;

/* leaf-list /wire-interface-pac/wirebased-interface-capability/available-mau-list/supported-alarms */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_supported_alarms_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarms;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_supported_alarms;

/* list /wire-interface-pac/wirebased-interface-capability/available-mau-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list_ {
    dlq_hdr_t qhdr;
    xmlChar *mau_id;
    xmlChar *mii_kind;
    xmlChar *mdi_kind;
    xmlChar *required_medium_kind;
    dlq_hdr_t wavelength_min;
    dlq_hdr_t wavelength_max;
    int32 wavelength_grid_min;
    int32 link_length_max;
    xmlChar *vendor_name;
    xmlChar *vendor_oui;
    xmlChar *part_number;
    xmlChar *revision_number;
    xmlChar *serial_number;
    xmlChar *date_code;
    dlq_hdr_t pmd_list;
    dlq_hdr_t signal_ordering_list;
    boolean auto_signal_ordering_is_avail;
    boolean short_reach_mode_is_avail;
    boolean eee_is_avail;
    boolean unidirectional_operation_is_avail;
    dlq_hdr_t supported_alarms;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_available_mau_list;

/* leaf-list /wire-interface-pac/wirebased-interface-capability/supported-loop-back-kind-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_supported_loop_back_kind_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_loop_back_kind_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_supported_loop_back_kind_list;

/* leaf-list /wire-interface-pac/wirebased-interface-capability/supported-alarm-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_supported_alarm_list_ {
    dlq_hdr_t qhdr;
    xmlChar *supported_alarm_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_supported_alarm_list;

/* container /wire-interface-pac/wirebased-interface-capability */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_capability_ {
    dlq_hdr_t available_mau_list;
    boolean auto_pmd_negotiation_is_avail;
    boolean auto_pmd_negotiation_max_is_avail;
    dlq_hdr_t supported_loop_back_kind_list;
    xmlChar *maintenance_timer_range;
    dlq_hdr_t supported_alarm_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_capability;

/* leaf-list /wire-interface-pac/wirebased-interface-configuration/transceiver-is-on-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_transceiver_is_on_list_ {
    dlq_hdr_t qhdr;
    boolean transceiver_is_on_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_transceiver_is_on_list;

/* leaf-list /wire-interface-pac/wirebased-interface-configuration/wavelength-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_wavelength_list_ {
    dlq_hdr_t qhdr;
    int32 wavelength_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_wavelength_list;

/* list /wire-interface-pac/wirebased-interface-configuration/problem-kind-severity-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_kind_name;
    xmlChar *problem_kind_severity;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list;

/* container /wire-interface-pac/wirebased-interface-configuration */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration_ {
    xmlChar *wire_interface_name;
    xmlChar *remote_wire_interface_name;
    boolean interface_is_on;
    dlq_hdr_t transceiver_is_on_list;
    boolean auto_pmd_negotiation_is_on;
    xmlChar *fixed_pmd;
    xmlChar *auto_pmd_negotiation_max;
    boolean auto_signal_ordering_is_on;
    xmlChar *fixed_signal_ordering;
    boolean short_reach_mode_is_on;
    boolean unidirectional_operation_is_on;
    dlq_hdr_t wavelength_list;
    int8 temperature_high_threshold;
    int8 temperature_low_threshold;
    int8 rxlevel_high_threshold;
    int8 rxlevel_low_threshold;
    xmlChar *loop_back_kind_on;
    boolean isolation_is_on;
    boolean restart_pmd_negotiation_is_on;
    boolean reset_mau_is_on;
    int32 maintenance_timer;
    dlq_hdr_t problem_kind_severity_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration;

/* leaf-list /wire-interface-pac/wirebased-interface-status/receive-signal-is-detected */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_status_receive_signal_is_detected_ {
    dlq_hdr_t qhdr;
    boolean receive_signal_is_detected;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_status_receive_signal_is_detected;

/* leaf-list /wire-interface-pac/wirebased-interface-status/signal-ordering-kind-cur/signal-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_signal_list_ {
    dlq_hdr_t qhdr;
    xmlChar *signal_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_signal_list;

/* container /wire-interface-pac/wirebased-interface-status/signal-ordering-kind-cur */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_ {
    xmlChar *signal_ordering_kind_name;
    dlq_hdr_t signal_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur;

/* leaf-list /wire-interface-pac/wirebased-interface-status/rx-level-cur */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_status_rx_level_cur_ {
    dlq_hdr_t qhdr;
    int8 rx_level_cur;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_status_rx_level_cur;

/* container /wire-interface-pac/wirebased-interface-status */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_status_ {
    boolean interface_is_up;
    dlq_hdr_t receive_signal_is_detected;
    boolean pmd_is_up;
    xmlChar *pmd_cur;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur signal_ordering_kind_cur;
    boolean eee_is_up;
    boolean link_is_up;
    boolean link_is_idle;
    int8 tx_level_cur;
    dlq_hdr_t rx_level_cur;
    int8 temp_cur;
    xmlChar *loop_back_kind_up;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_status;

/* list /wire-interface-pac/wirebased-interface-current-problems/current-problem-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_ {
    dlq_hdr_t qhdr;
    xmlChar *problem_name;
    int32 sequence_number;
    xmlChar *time_stamp;
    xmlChar *problem_severity;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_current_problems_current_problem_list;

/* container /wire-interface-pac/wirebased-interface-current-problems */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_current_problems_ {
    dlq_hdr_t current_problem_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_current_problems;

/* container /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/performance-data */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_ {
    int32 es;
    int32 ses;
    int32 symbol_error_during_carrier;
    int32 low_power_idle_transmitter_ms;
    int32 low_power_idle_receiver_ms;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data;

/* list /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data performance_data;
    xmlChar *timestamp;
    boolean suspect_interval_flag;
    int64 elapsed_time;
    xmlChar *scanner_id;
    xmlChar *granularity_period;
    xmlChar *administrative_state;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list;

/* container /wire-interface-pac/wirebased-interface-current-performance */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance_ {
    dlq_hdr_t current_performance_data_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance;

/* container /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/performance-data */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_ {
    int32 es;
    int32 ses;
    int32 symbol_error_during_carrier;
    int32 low_power_idle_transmitter_ms;
    int32 low_power_idle_receiver_ms;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data;

/* list /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_ {
    dlq_hdr_t qhdr;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data performance_data;
    boolean suspect_interval_flag;
    xmlChar *history_data_id;
    xmlChar *period_end_time;
    xmlChar *granularity_period;
    xmlChar *object_class;
    xmlChar *name_binding;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list;

/* container /wire-interface-pac/wirebased-interface-historical-performances */
typedef struct y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances_ {
    dlq_hdr_t historical_performance_data_list;
} y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances;

/* list /wire-interface-pac */
typedef struct y_microwave_model_T_wire_interface_pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_capability wirebased_interface_capability;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_configuration wirebased_interface_configuration;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_status wirebased_interface_status;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_current_problems wirebased_interface_current_problems;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_current_performance wirebased_interface_current_performance;
    y_microwave_model_T_wire_interface_pac_wirebased_interface_historical_performances wirebased_interface_historical_performances;
} y_microwave_model_T_wire_interface_pac;

/* notification /object-creation-notification */
typedef struct y_microwave_model_T_object_creation_notification_ {
    int32 counter;
    xmlChar *time_stamp;
    xmlChar *object_id_ref;
    xmlChar *object_type;
} y_microwave_model_T_object_creation_notification;

/* notification /object-deletion-notification */
typedef struct y_microwave_model_T_object_deletion_notification_ {
    int32 counter;
    xmlChar *time_stamp;
    xmlChar *object_id_ref;
} y_microwave_model_T_object_deletion_notification;

/* notification /attribute-value-changed-notification */
typedef struct y_microwave_model_T_attribute_value_changed_notification_ {
    int32 counter;
    xmlChar *time_stamp;
    xmlChar *object_id_ref;
    xmlChar *attribute_name;
    xmlChar *new_value;
} y_microwave_model_T_attribute_value_changed_notification;

/* notification /problem-notification */
typedef struct y_microwave_model_T_problem_notification_ {
    int32 counter;
    xmlChar *time_stamp;
    xmlChar *object_id_ref;
    xmlChar *problem;
    xmlChar *severity;
} y_microwave_model_T_problem_notification;

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_type_of_equipment_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/type-of-equipment
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_type_of_equipment_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_tx_frequency_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/tx-frequency-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_tx_frequency_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_tx_frequency_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/tx-frequency-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_tx_frequency_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_rx_frequency_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/rx-frequency-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_rx_frequency_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_rx_frequency_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/rx-frequency-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_rx_frequency_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_adaptive_modulation_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/adaptive-modulation-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_adaptive_modulation_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_mimo_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/mimo-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_mimo_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_mimo_channels_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/mimo-channels
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_mimo_channels_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_alic_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/alic-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_alic_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_atpc_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/atpc-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_atpc_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_atpc_range_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/atpc-range
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_atpc_range_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_encryption_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/encryption-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_encryption_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_loop_back_kind_list_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-loop-back-kind-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_loop_back_kind_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_maintenance_timer_range_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/maintenance-timer-range
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_maintenance_timer_range_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_alarms_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/supported-channel-plan
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_is_variable_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/duplex-distance-is-variable
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_is_variable_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_list_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/duplex-distance-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/duplex-distance
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_duplex_distance_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_auto_freq_select_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/auto-freq-select-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_auto_freq_select_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/transmission-mode-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_name_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/transmission-mode-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_channel_bandwidth_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/channel-bandwidth
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_channel_bandwidth_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_modulation_scheme_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/modulation-scheme
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_modulation_scheme_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_code_rate_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/code-rate
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_code_rate_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_symbol_rate_reduction_factor_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/symbol-rate-reduction-factor
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_symbol_rate_reduction_factor_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_tx_power_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/tx-power-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_tx_power_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_tx_power_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/tx-power-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_tx_power_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_rx_threshold_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/rx-threshold
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_rx_threshold_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_am_upshift_level_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/am-upshift-level
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_am_upshift_level_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_am_downshift_level_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/am-downshift-level
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_am_downshift_level_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_xpic_is_avail_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-capability/supported-channel-plan-list/transmission-mode-list/xpic-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_xpic_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_supported_channel_plan,
    const xmlChar *k_mw_air_interface_pac_air_interface_capability_supported_channel_plan_list_transmission_mode_list_transmission_mode_id);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_air_interface_name_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/air-interface-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_air_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_remote_air_interface_name_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/remote-air-interface-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_remote_air_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_expected_signal_id_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/expected-signal-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_expected_signal_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmitted_signal_id_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/transmitted-signal-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmitted_signal_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_radio_signal_id_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/radio-signal-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_radio_signal_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_tx_frequency_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/tx-frequency
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_tx_frequency_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_rx_frequency_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/rx-frequency
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_rx_frequency_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmission_mode_min_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/transmission-mode-min
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmission_mode_min_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmission_mode_max_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/transmission-mode-max
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmission_mode_max_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_tx_channel_bandwidth_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/tx-channel-bandwidth
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_tx_channel_bandwidth_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_rx_channel_bandwidth_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/rx-channel-bandwidth
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_rx_channel_bandwidth_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_polarization_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/polarization
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_polarization_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_power_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/power-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_power_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmitter_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/transmitter-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_transmitter_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_receiver_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/receiver-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_receiver_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_tx_power_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/tx-power
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_tx_power_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_adaptive_modulation_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/adaptive-modulation-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_adaptive_modulation_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_modulation_min_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/modulation-min
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_modulation_min_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_modulation_max_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/modulation-max
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_modulation_max_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_xpic_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/xpic-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_xpic_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_mimo_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/mimo-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_mimo_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_alic_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/alic-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_alic_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/atpc-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_thresh_upper_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/atpc-thresh-upper
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_thresh_upper_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_thresh_lower_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/atpc-thresh-lower
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_thresh_lower_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_tx_power_min_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/atpc-tx-power-min
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_atpc_tx_power_min_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_auto_freq_select_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/auto-freq-select-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_auto_freq_select_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_auto_freq_select_range_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/auto-freq-select-range
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_auto_freq_select_range_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_modulation_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/modulation-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_modulation_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_encryption_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/encryption-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_encryption_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_cryptographic_key_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/cryptographic-key
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_cryptographic_key_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_performance_monitoring_collection_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/performance-monitoring-collection-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_performance_monitoring_collection_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/threshold-cross-alarm-list/g826-value-kind
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/threshold-cross-alarm-list/granularity-period
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_alarm_raising_threshold_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/threshold-cross-alarm-list/alarm-raising-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_alarm_raising_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_alarm_clearing_threshold_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/threshold-cross-alarm-list/alarm-clearing-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_alarm_clearing_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/threshold-cross-alarm-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_pac_air_interface_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_loop_back_kind_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/loop-back-kind-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_loop_back_kind_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_maintenance_timer_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/maintenance-timer
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_maintenance_timer_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_configuration_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac/air-interface-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_tx_frequency_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/tx-frequency-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_tx_frequency_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_rx_frequency_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/rx-frequency-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_rx_frequency_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_tx_level_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/tx-level-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_tx_level_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_rx_level_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/rx-level-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_rx_level_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_transmission_mode_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/transmission-mode-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_transmission_mode_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_modulation_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/modulation-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_modulation_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_code_rate_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/code-rate-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_code_rate_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_received_signal_id_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/received-signal-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_received_signal_id_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_snir_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/snir-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_snir_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_xpd_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/xpd-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_xpd_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_rf_temp_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/rf-temp-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_rf_temp_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_last_status_change_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/last-status-change
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_last_status_change_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_radio_power_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/radio-power-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_radio_power_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_link_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/link-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_link_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_xpic_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/xpic-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_xpic_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_mimo_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/mimo-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_mimo_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_alic_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/alic-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_alic_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_atpc_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/atpc-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_atpc_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_auto_freq_select_is_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/auto-freq-select-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_auto_freq_select_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_loop_back_kind_up_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/loop-back-kind-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_loop_back_kind_up_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_local_end_point_id_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/local-end-point-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_local_end_point_id_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_status_remote_end_point_id_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-status/remote-end-point-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_status_remote_end_point_id_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    int32 k_mw_air_interface_pac_air_interface_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    int32 k_mw_air_interface_pac_air_interface_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    int32 k_mw_air_interface_pac_air_interface_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_cses_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_cses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_unavailability_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_tx_level_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/tx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_tx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_tx_level_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/tx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_tx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_tx_level_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/tx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_tx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rx_level_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/rx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rx_level_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/rx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rx_level_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/rx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list_transmission_mode_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time-x-states-list/transmission-mode
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list_transmission_mode_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list_time_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time-x-states-list/time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_x_states_list_transmission_mode);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time2_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time2-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time2_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4_states_s_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time4-states-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4_states_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time4-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time8_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time8-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time8_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time16_states_s_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time16-states-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time16_states_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time16_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time16-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time16_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time32_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time32-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time32_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time64_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time64-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time64_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time128_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time128-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time128_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time256_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time256-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time256_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time512_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time512-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time512_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time512_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time512-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time512_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time1024_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time1024-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time1024_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time1024_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time1024-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time1024_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time2048_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time2048-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time2048_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time2048_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time2048-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time2048_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4096_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time4096-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4096_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4096_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time4096-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time4096_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time8192_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time8192-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time8192_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time8192_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time8192-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time8192_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_snir_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/snir-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_snir_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_snir_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/snir-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_snir_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_snir_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/snir-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_snir_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_xpd_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/xpd-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_xpd_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_xpd_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/xpd-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_xpd_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_xpd_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/xpd-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_xpd_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rf_temp_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/rf-temp-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rf_temp_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rf_temp_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/rf-temp-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rf_temp_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rf_temp_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/rf-temp-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_rf_temp_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_defect_blocks_sum_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/defect-blocks-sum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_defect_blocks_sum_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_cses_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_cses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_unavailability_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_tx_level_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/tx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_tx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_tx_level_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/tx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_tx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_tx_level_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/tx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_tx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rx_level_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/rx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rx_level_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/rx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rx_level_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/rx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list_transmission_mode_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time-x-states-list/transmission-mode
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list_transmission_mode_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list_time_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time-x-states-list/time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_x_states_list_transmission_mode);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time2_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time2-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time2_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4_states_s_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time4-states-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4_states_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time4-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time8_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time8-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time8_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time16_states_s_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time16-states-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time16_states_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time16_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time16-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time16_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time32_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time32-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time32_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time64_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time64-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time64_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time128_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time128-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time128_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time256_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time256-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time256_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time512_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time512-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time512_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time512_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time512-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time512_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time1024_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time1024-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time1024_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time1024_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time1024-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time1024_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time2048_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time2048-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time2048_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time2048_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time2048-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time2048_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4096_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time4096-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4096_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4096_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time4096-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time4096_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time8192_states_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time8192-states
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time8192_states_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time8192_states_l_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time8192-states-l
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time8192_states_l_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_snir_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/snir-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_snir_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_snir_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/snir-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_snir_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_snir_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/snir-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_snir_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_xpd_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/xpd-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_xpd_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_xpd_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/xpd-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_xpd_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_xpd_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/xpd-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_xpd_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rf_temp_min_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/rf-temp-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rf_temp_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rf_temp_max_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/rf-temp-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rf_temp_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rf_temp_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/rf-temp-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_rf_temp_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_defect_blocks_sum_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/defect-blocks-sum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_defect_blocks_sum_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-air-interface-pac/air-interface-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_pac_air_interface_historical_performances_historical_performance_data_list_history_data_id);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_pac_edit
* 
* Edit database object callback
* Path: /mw-air-interface-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_co_channel_group_co_channel_group_id_edit
* 
* Edit database object callback
* Path: /co-channel-group/co-channel-group-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_co_channel_group_co_channel_group_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_co_channel_group_co_channel_group_id);


/********************************************************************
* FUNCTION u_microwave_model_co_channel_group_air_interface_list_edit
* 
* Edit database object callback
* Path: /co-channel-group/air-interface-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_co_channel_group_air_interface_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_co_channel_group_co_channel_group_id);


/********************************************************************
* FUNCTION u_microwave_model_co_channel_group_sort_of_co_channel_group_edit
* 
* Edit database object callback
* Path: /co-channel-group/sort-of-co-channel-group
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_co_channel_group_sort_of_co_channel_group_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_co_channel_group_co_channel_group_id);


/********************************************************************
* FUNCTION u_microwave_model_co_channel_group_logical_termination_point_edit
* 
* Edit database object callback
* Path: /co-channel-group/logical-termination-point
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_co_channel_group_logical_termination_point_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_co_channel_group_co_channel_group_id);


/********************************************************************
* FUNCTION u_microwave_model_co_channel_group_edit
* 
* Edit database object callback
* Path: /co-channel-group
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_co_channel_group_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_co_channel_group_co_channel_group_id);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_end_point_pac_role_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-end-point-pac/role
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_end_point_pac_role_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_end_point_pac_endpoint);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_end_point_pac_endpoint_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-end-point-pac/endpoint
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_end_point_pac_endpoint_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_end_point_pac_endpoint);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_end_point_pac_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-end-point-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_end_point_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_end_point_pac_endpoint);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_fc_switch_pac_prot_type_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-fc-switch-pac/prot-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_fc_switch_pac_prot_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_fc_switch_pac_fcswitch);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_fc_switch_pac_air_interface_hsb_configuration_is_faulty_severity_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-fc-switch-pac/air-interface-hsb-configuration-is-faulty-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_fc_switch_pac_air_interface_hsb_configuration_is_faulty_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_fc_switch_pac_fcswitch);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_fc_switch_pac_air_interface_hsb_is_partly_down_severity_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-fc-switch-pac/air-interface-hsb-is-partly-down-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_fc_switch_pac_air_interface_hsb_is_partly_down_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_fc_switch_pac_fcswitch);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_fc_switch_pac_air_interface_hsb_is_down_severity_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-fc-switch-pac/air-interface-hsb-is-down-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_fc_switch_pac_air_interface_hsb_is_down_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_fc_switch_pac_fcswitch);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_fc_switch_pac_fcswitch_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-fc-switch-pac/fcswitch
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_fc_switch_pac_fcswitch_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_fc_switch_pac_fcswitch);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_hsb_fc_switch_pac_edit
* 
* Edit database object callback
* Path: /mw-air-interface-hsb-fc-switch-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_hsb_fc_switch_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_hsb_fc_switch_pac_fcswitch);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity_diversity_name_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-capability/available-kinds-of-diversity/diversity-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity_diversity_name_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity_number_of_air_interfaces_max_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-capability/available-kinds-of-diversity/number-of-air-interfaces-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity_number_of_air_interfaces_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_capability_available_kinds_of_diversity_diversity_name);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_supported_alarms_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-capability/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_capability_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_diversity_name_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/air-interface-diversity/diversity-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_diversity_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_number_of_air_interfaces_max_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/air-interface-diversity/number-of-air-interfaces-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_number_of_air_interfaces_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/air-interface-diversity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_diversity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_ltp_list_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/air-interface-ltp-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_air_interface_ltp_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_performance_monitoring_collection_is_on_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/performance-monitoring-collection-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_performance_monitoring_collection_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/threshold-cross-alarm-list/g826-value-kind
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/threshold-cross-alarm-list/granularity-period
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_alarm_raising_threshold_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/threshold-cross-alarm-list/alarm-raising-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_alarm_raising_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_alarm_clearing_threshold_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/threshold-cross-alarm-list/alarm-clearing-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_alarm_clearing_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/threshold-cross-alarm-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_g826_value_kind,
    xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_threshold_cross_alarm_list_granularity_period);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_status_snir_cur_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-status/snir-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_status_snir_cur_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_status_air_interface_diversity_status_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-status/air-interface-diversity-status
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_status_air_interface_diversity_status_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_status_last_status_change_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-status/last-status-change
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_status_last_status_change_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    int32 k_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    int32 k_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    int32 k_mw_air_interface_diversity_pac_air_interface_diversity_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_snir_min_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/performance-data/snir-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_snir_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_snir_max_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/performance-data/snir-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_snir_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_snir_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/performance-data/snir-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_performance_data_snir_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_snir_min_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/performance-data/snir-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_snir_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_snir_max_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/performance-data/snir-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_snir_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_snir_avg_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/performance-data/snir-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_performance_data_snir_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-air-interface-diversity-pac/air-interface-diversity-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol,
    const xmlChar *k_mw_air_interface_diversity_pac_air_interface_diversity_historical_performances_historical_performance_data_list_history_data_id);


/********************************************************************
* FUNCTION u_microwave_model_mw_air_interface_diversity_pac_edit
* 
* Edit database object callback
* Path: /mw-air-interface-diversity-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_air_interface_diversity_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_air_interface_diversity_pac_layer_protocol);


#ifdef u_microwave_model_F_pure_ethernet

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_structure_id_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-capability/structure-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_structure_id_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_supported_alarms_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-capability/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_capability_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_performance_monitoring_collection_is_on_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration/performance-monitoring-collection-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_performance_monitoring_collection_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_segment_status_type_id_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/segment-status-list/segment-status-type-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_segment_status_type_id_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_segment_is_reserved_for_tdm_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/segment-status-list/segment-is-reserved-for-tdm
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_segment_is_reserved_for_tdm_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_operational_status_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/segment-status-list/operational-status
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_operational_status_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_obsolete_priority_class_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/segment-status-list/obsolete-priority-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_obsolete_priority_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_obsolete_drop_order_rank_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/segment-status-list/obsolete-drop-order-rank
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_segment_status_list_obsolete_drop_order_rank_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_last_status_change_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-status/last-status-change
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_status_last_status_change_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    int32 k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    int32 k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    int32 k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_cses_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_cses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_unavailability_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_rx_level_min_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/rx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_rx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_rx_level_max_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/rx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_rx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_rx_level_avg_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/performance-data/rx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_performance_data_rx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_cses_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_cses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_unavailability_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_min_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/rx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_max_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/rx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_avg_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/performance-data/rx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol,
    const xmlChar *k_mw_pure_ethernet_structure_pac_pure_ethernet_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_pure_ethernet_structure_pac_edit
* 
* Edit database object callback
* Path: /mw-pure-ethernet-structure-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_pure_ethernet_structure_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_pure_ethernet_structure_pac_layer_protocol);

#endif /* u_microwave_model_F_pure_ethernet */

#ifdef u_microwave_model_F_hybrid_microwave

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_structure_id_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/structure-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_structure_id_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_tdm_structure_name_get_keys
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-tdm-structure-types-list/tdm-structure-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_tdm_structure_name_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_tdm_segment_size_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-tdm-structure-types-list/tdm-segment-size
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_tdm_segment_size_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_tdm_structure_name);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_max_number_of_segments_reservable_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-tdm-structure-types-list/max-number-of-segments-reservable
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_max_number_of_segments_reservable_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_tdm_structure_types_list_tdm_structure_name);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_alarms_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-capability/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_capability_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_tdm_structure_name_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-kind/tdm-structure-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_tdm_structure_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_tdm_segment_size_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-kind/tdm-segment-size
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_tdm_segment_size_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_max_number_of_segments_reservable_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-kind/max-number-of-segments-reservable
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_max_number_of_segments_reservable_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-kind
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_kind_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_tdm_structure_name_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-type/tdm-structure-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_tdm_structure_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_tdm_segment_size_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-type/tdm-segment-size
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_tdm_segment_size_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_max_number_of_segments_reservable_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-type/max-number-of-segments-reservable
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_max_number_of_segments_reservable_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/structure-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_structure_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_number_of_tdm_segments_to_be_reserved_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/number-of-tdm-segments-to-be-reserved
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_number_of_tdm_segments_to_be_reserved_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_performance_monitoring_collection_is_on_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/performance-monitoring-collection-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_performance_monitoring_collection_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_status_type_id_get_keys
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/segment-status-list/segment-status-type-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_status_type_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_is_reserved_for_tdm_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/segment-status-list/segment-is-reserved-for-tdm
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_is_reserved_for_tdm_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int16 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_status_type_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_operational_status_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/segment-status-list/operational-status
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_operational_status_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int16 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_status_type_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_obsolete_priority_class_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/segment-status-list/obsolete-priority-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_obsolete_priority_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int16 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_status_type_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_obsolete_drop_order_rank_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/segment-status-list/obsolete-drop-order-rank
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_obsolete_drop_order_rank_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int16 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_segment_status_list_segment_status_type_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_last_status_change_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-status/last-status-change
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_status_last_status_change_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int32 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int32 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    int32 k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_cses_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_cses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_unavailability_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_rx_level_min_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/rx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_rx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_rx_level_max_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/rx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_rx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_rx_level_avg_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/performance-data/rx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_performance_data_rx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_cses_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_cses_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_unavailability_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_min_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/rx-level-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_min_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_max_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/rx-level-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_max_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_avg_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/performance-data/rx-level-avg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_performance_data_rx_level_avg_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol,
    const xmlChar *k_mw_hybrid_mw_structure_pac_hybrid_mw_structure_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_hybrid_mw_structure_pac_edit
* 
* Edit database object callback
* Path: /mw-hybrid-mw-structure-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_hybrid_mw_structure_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_hybrid_mw_structure_pac_layer_protocol);

#endif /* u_microwave_model_F_hybrid_microwave */

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_bundling_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/bundling-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_bundling_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_packet_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/packet-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_packet_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_layer2_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/layer2-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_layer2_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_vlan_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/vlan-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_vlan_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_q_in_q_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/q-in-q-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_q_in_q_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_mpls_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/mpls-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_mpls_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_ipv4_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/ipv4-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_ipv4_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_ipv6_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/ipv6-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_ipv6_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_layer4_compression_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/layer4-compression-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_layer4_compression_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_encryption_is_avail_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/encryption-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_encryption_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_supported_alarms_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-capability/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_capability_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_container_id_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/container-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_container_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_structure_id_ref_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/segments-id-list/structure-id-ref
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_structure_id_ref_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_structure_id_ref,
    int16 k_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_segment_id_ref);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_segment_id_ref_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/segments-id-list/segment-id-ref
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_segment_id_ref_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_structure_id_ref,
    int16 k_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_segment_id_ref);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/segments-id-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_structure_id_ref,
    int16 k_mw_ethernet_container_pac_ethernet_container_configuration_segments_id_list_segment_id_ref);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_packet_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/packet-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_packet_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_layer2_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/layer2-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_layer2_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_vlan_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/vlan-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_vlan_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_q_in_q_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/q-in-q-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_q_in_q_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_mpls_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/mpls-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_mpls_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_ipv4_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/ipv4-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_ipv4_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_ipv6_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/ipv6-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_ipv6_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_layer4_compression_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/layer4-compression-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_layer4_compression_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_encryption_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/encryption-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_encryption_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_cryptographic_key_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/cryptographic-key
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_cryptographic_key_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_performance_monitoring_collection_is_on_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/performance-monitoring-collection-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_performance_monitoring_collection_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_status_last_status_change_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-status/last-status-change
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_status_last_status_change_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    int32 k_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    int32 k_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    int32 k_mw_ethernet_container_pac_ethernet_container_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/performance-data/tx-ethernet-bytes-max-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/performance-data/tx-ethernet-bytes-max-m
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_sum_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/performance-data/tx-ethernet-bytes-sum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_sum_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/performance-data/tx-ethernet-bytes-max-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/performance-data/tx-ethernet-bytes-max-m
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_sum_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/performance-data/tx-ethernet-bytes-sum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_sum_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-ethernet-container-pac/ethernet-container-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol,
    const xmlChar *k_mw_ethernet_container_pac_ethernet_container_historical_performances_historical_performance_data_list_history_data_id);


/********************************************************************
* FUNCTION u_microwave_model_mw_ethernet_container_pac_edit
* 
* Edit database object callback
* Path: /mw-ethernet-container-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_ethernet_container_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_ethernet_container_pac_layer_protocol);


#ifdef u_microwave_model_F_hybrid_microwave

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list_tdm_container_name_get_keys
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-capability/supported-tdm-container-types-list/tdm-container-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list_tdm_container_name_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list_tdm_container_size_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-capability/supported-tdm-container-types-list/tdm-container-size
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list_tdm_container_size_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_capability_supported_tdm_container_types_list_tdm_container_name);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_alarms_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-capability/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_capability_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_id_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/container-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_type_tdm_container_name_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/container-type/tdm-container-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_type_tdm_container_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_type_tdm_container_size_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/container-type/tdm-container-size
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_type_tdm_container_size_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_type_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/container-type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_container_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_segment_id_structure_id_ref_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/segment-id/structure-id-ref
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_segment_id_structure_id_ref_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_segment_id_segment_id_ref_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/segment-id/segment-id-ref
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_segment_id_segment_id_ref_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_segment_id_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/segment-id
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_segment_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_performance_monitoring_collection_is_on_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/performance-monitoring-collection-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_performance_monitoring_collection_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac/tdm-container-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_status_last_status_change_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-status/last-status-change
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_status_last_status_change_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    int32 k_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    int32 k_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    int32 k_mw_tdm_container_pac_tdm_container_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/performance-data/tx-ethernet-bytes-max-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/performance-data/tx-ethernet-bytes-max-m
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_sum_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/performance-data/tx-ethernet-bytes-sum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_tx_ethernet_bytes_sum_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/performance-data/tx-ethernet-bytes-max-s
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_s_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/performance-data/tx-ethernet-bytes-max-m
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_max_m_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_sum_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/performance-data/tx-ethernet-bytes-sum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_tx_ethernet_bytes_sum_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_time_period_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/performance-data/time-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_performance_data_time_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /mw-tdm-container-pac/tdm-container-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol,
    const xmlChar *k_mw_tdm_container_pac_tdm_container_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_mw_tdm_container_pac_edit
* 
* Edit database object callback
* Path: /mw-tdm-container-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_mw_tdm_container_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_mw_tdm_container_pac_layer_protocol);

#endif /* u_microwave_model_F_hybrid_microwave */

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_layer_protocol_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/layer-protocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_layer_protocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id_get_keys
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/mau-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_mii_kind_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/mii-kind
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_mii_kind_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_mdi_kind_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/mdi-kind
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_mdi_kind_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_required_medium_kind_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/required-medium-kind
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_required_medium_kind_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_min_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/wavelength-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_min_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_max_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/wavelength-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_max_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_grid_min_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/wavelength-grid-min
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_wavelength_grid_min_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_link_length_max_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/link-length-max
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_link_length_max_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_vendor_name_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/vendor-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_vendor_name_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_vendor_oui_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/vendor-oui
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_vendor_oui_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_part_number_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/part-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_part_number_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_revision_number_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/revision-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_revision_number_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_serial_number_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/serial-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_serial_number_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_date_code_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/date-code
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_date_code_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_pmd_list_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/pmd-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_pmd_list_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_ordering_kind_name_get_keys
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/signal-ordering-list/signal-ordering-kind-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_ordering_kind_name_get_keys (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_list_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/signal-ordering-list/signal-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_list_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_signal_ordering_list_signal_ordering_kind_name);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_auto_signal_ordering_is_avail_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/auto-signal-ordering-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_auto_signal_ordering_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_short_reach_mode_is_avail_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/short-reach-mode-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_short_reach_mode_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_eee_is_avail_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/eee-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_eee_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_unidirectional_operation_is_avail_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/unidirectional-operation-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_unidirectional_operation_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_supported_alarms_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/available-mau-list/supported-alarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_available_mau_list_supported_alarms_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_capability_available_mau_list_mau_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_auto_pmd_negotiation_is_avail_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/auto-pmd-negotiation-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_auto_pmd_negotiation_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_auto_pmd_negotiation_max_is_avail_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/auto-pmd-negotiation-max-is-avail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_auto_pmd_negotiation_max_is_avail_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_supported_loop_back_kind_list_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/supported-loop-back-kind-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_supported_loop_back_kind_list_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_maintenance_timer_range_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/maintenance-timer-range
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_maintenance_timer_range_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_capability_supported_alarm_list_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-capability/supported-alarm-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_capability_supported_alarm_list_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_wire_interface_name_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/wire-interface-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_wire_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_remote_wire_interface_name_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/remote-wire-interface-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_remote_wire_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_interface_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/interface-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_interface_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_transceiver_is_on_list_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/transceiver-is-on-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_transceiver_is_on_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_auto_pmd_negotiation_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/auto-pmd-negotiation-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_auto_pmd_negotiation_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_fixed_pmd_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/fixed-pmd
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_fixed_pmd_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_auto_pmd_negotiation_max_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/auto-pmd-negotiation-max
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_auto_pmd_negotiation_max_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_auto_signal_ordering_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/auto-signal-ordering-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_auto_signal_ordering_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_fixed_signal_ordering_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/fixed-signal-ordering
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_fixed_signal_ordering_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_short_reach_mode_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/short-reach-mode-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_short_reach_mode_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_unidirectional_operation_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/unidirectional-operation-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_unidirectional_operation_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_wavelength_list_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/wavelength-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_wavelength_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_temperature_high_threshold_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/temperature-high-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_temperature_high_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_temperature_low_threshold_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/temperature-low-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_temperature_low_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_rxlevel_high_threshold_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/rxlevel-high-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_rxlevel_high_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_rxlevel_low_threshold_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/rxlevel-low-threshold
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_rxlevel_low_threshold_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_loop_back_kind_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/loop-back-kind-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_loop_back_kind_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_isolation_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/isolation-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_isolation_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_restart_pmd_negotiation_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/restart-pmd-negotiation-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_restart_pmd_negotiation_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_reset_mau_is_on_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/reset-mau-is-on
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_reset_mau_is_on_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_maintenance_timer_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/maintenance-timer
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_maintenance_timer_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_name_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/problem-kind-severity-list/problem-kind-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_severity_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/problem-kind-severity-list/problem-kind-severity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_severity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration/problem-kind-severity-list
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_configuration_problem_kind_severity_list_problem_kind_name);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_configuration_edit
* 
* Edit database object callback
* Path: /wire-interface-pac/wirebased-interface-configuration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_configuration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_interface_is_up_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/interface-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_interface_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_receive_signal_is_detected_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/receive-signal-is-detected
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_receive_signal_is_detected_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_pmd_is_up_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/pmd-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_pmd_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_pmd_cur_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/pmd-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_pmd_cur_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_signal_ordering_kind_name_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/signal-ordering-kind-cur/signal-ordering-kind-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_signal_ordering_kind_name_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_signal_list_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/signal-ordering-kind-cur/signal-list
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_signal_ordering_kind_cur_signal_list_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_eee_is_up_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/eee-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_eee_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_link_is_up_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/link-is-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_link_is_up_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_link_is_idle_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/link-is-idle
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_link_is_idle_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_tx_level_cur_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/tx-level-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_tx_level_cur_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_rx_level_cur_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/rx-level-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_rx_level_cur_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_temp_cur_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/temp-cur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_temp_cur_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_status_loop_back_kind_up_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-status/loop-back-kind-up
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_status_loop_back_kind_up_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_problem_name_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-problems/current-problem-list/problem-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_problem_name_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    int32 k_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_sequence_number_get_keys
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-problems/current-problem-list/sequence-number
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_sequence_number_get_keys (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_time_stamp_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-problems/current-problem-list/time-stamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_time_stamp_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    int32 k_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_problem_severity_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-problems/current-problem-list/problem-severity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_problem_severity_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    int32 k_wire_interface_pac_wirebased_interface_current_problems_current_problem_list_sequence_number);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_symbol_error_during_carrier_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/performance-data/symbol-error-during-carrier
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_symbol_error_during_carrier_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_low_power_idle_transmitter_ms_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/performance-data/low-power-idle-transmitter-ms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_low_power_idle_transmitter_ms_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_low_power_idle_receiver_ms_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/performance-data/low-power-idle-receiver-ms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_performance_data_low_power_idle_receiver_ms_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_timestamp_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_elapsed_time_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/elapsed-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_elapsed_time_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id_get_keys
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/scanner-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_administrative_state_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/administrative-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_administrative_state_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-current-performance/current-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_current_performance_current_performance_data_list_scanner_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_es_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/performance-data/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_es_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_ses_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/performance-data/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_ses_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_symbol_error_during_carrier_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/performance-data/symbol-error-during-carrier
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_symbol_error_during_carrier_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_low_power_idle_transmitter_ms_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/performance-data/low-power-idle-transmitter-ms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_low_power_idle_transmitter_ms_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_low_power_idle_receiver_ms_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/performance-data/low-power-idle-receiver-ms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_performance_data_low_power_idle_receiver_ms_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_suspect_interval_flag_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/suspect-interval-flag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_suspect_interval_flag_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id_get_keys
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/history-data-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id_get_keys (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_period_end_time_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/period-end-time
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_period_end_time_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_granularity_period_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/granularity-period
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_granularity_period_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_object_class_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/object-class
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_object_class_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);

/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_name_binding_get
* 
* Get database object callback
* Path: /wire-interface-pac/wirebased-interface-historical-performances/historical-performance-data-list/name-binding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_name_binding_get (
    val_value_t *dstval,
    const xmlChar *k_wire_interface_pac_layer_protocol,
    const xmlChar *k_wire_interface_pac_wirebased_interface_historical_performances_historical_performance_data_list_history_data_id);


/********************************************************************
* FUNCTION u_microwave_model_wire_interface_pac_edit
* 
* Edit database object callback
* Path: /wire-interface-pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_wire_interface_pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_wire_interface_pac_layer_protocol);


/********************************************************************
* FUNCTION u_microwave_model_object_creation_notification_send
* 
* Send a u_microwave_model_object_creation_notification notification
* Called by your code when notification event occurs
* 
********************************************************************/
extern void u_microwave_model_object_creation_notification_send (
    int32 counter,
    const xmlChar *time_stamp,
    const xmlChar *object_id_ref,
    const xmlChar *object_type);


/********************************************************************
* FUNCTION u_microwave_model_object_deletion_notification_send
* 
* Send a u_microwave_model_object_deletion_notification notification
* Called by your code when notification event occurs
* 
********************************************************************/
extern void u_microwave_model_object_deletion_notification_send (
    int32 counter,
    const xmlChar *time_stamp,
    const xmlChar *object_id_ref);


/********************************************************************
* FUNCTION u_microwave_model_attribute_value_changed_notification_send
* 
* Send a u_microwave_model_attribute_value_changed_notification notification
* Called by your code when notification event occurs
* 
********************************************************************/
extern void u_microwave_model_attribute_value_changed_notification_send (
    int32 counter,
    const xmlChar *time_stamp,
    const xmlChar *object_id_ref,
    const xmlChar *attribute_name,
    const xmlChar *new_value);


/********************************************************************
* FUNCTION u_microwave_model_problem_notification_send
* 
* Send a u_microwave_model_problem_notification notification
* Called by your code when notification event occurs
* 
********************************************************************/
extern void u_microwave_model_problem_notification_send (
    int32 counter,
    const xmlChar *time_stamp,
    const xmlChar *object_id_ref,
    const xmlChar *problem,
    const xmlChar *severity);

/********************************************************************
* FUNCTION u_microwave_model_init
* 
* initialize the microwave-model server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_microwave_model_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_microwave_model_init2 (void);

/********************************************************************
* FUNCTION u_microwave_model_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_microwave_model_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif